/* plugin-debian-0.0.1.h generated by valac 0.28.0, the Vala compiler, do not modify */


#ifndef __SRC_LIBRARY_C_PLUGIN_DEBIAN_0_0_1_H__
#define __SRC_LIBRARY_C_PLUGIN_DEBIAN_0_0_1_H__

#include <glib.h>
#include <stdlib.h>
#include <string.h>
#include <glib-object.h>
#include <bob-0.0.1.h>
#include <vala.h>
#include <gio/gio.h>
#include <archive.h>

G_BEGIN_DECLS


#define BOB_BUILDER_BUILD_PLUGIN_CONTROL_TYPE_CONTROL_FILE_ARCHITECTURE_ENUM (bob_builder_build_plugin_control_control_file_architecture_enum_get_type ())

#define BOB_BUILDER_BUILD_PLUGIN_CONTROL_TYPE_CONTROL_FILE_SECTION_ENUM (bob_builder_build_plugin_control_control_file_section_enum_get_type ())

#define BOB_BUILDER_BUILD_PLUGIN_CONTROL_TYPE_CONTROL_FILE_BUILDER (bob_builder_build_plugin_control_control_file_builder_get_type ())
#define BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_BUILDER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOB_BUILDER_BUILD_PLUGIN_CONTROL_TYPE_CONTROL_FILE_BUILDER, bobbuilderbuildplugincontrolControlFileBuilder))
#define BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_BUILDER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BOB_BUILDER_BUILD_PLUGIN_CONTROL_TYPE_CONTROL_FILE_BUILDER, bobbuilderbuildplugincontrolControlFileBuilderClass))
#define BOB_BUILDER_BUILD_PLUGIN_CONTROL_IS_CONTROL_FILE_BUILDER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOB_BUILDER_BUILD_PLUGIN_CONTROL_TYPE_CONTROL_FILE_BUILDER))
#define BOB_BUILDER_BUILD_PLUGIN_CONTROL_IS_CONTROL_FILE_BUILDER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BOB_BUILDER_BUILD_PLUGIN_CONTROL_TYPE_CONTROL_FILE_BUILDER))
#define BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_BUILDER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BOB_BUILDER_BUILD_PLUGIN_CONTROL_TYPE_CONTROL_FILE_BUILDER, bobbuilderbuildplugincontrolControlFileBuilderClass))

typedef struct _bobbuilderbuildplugincontrolControlFileBuilder bobbuilderbuildplugincontrolControlFileBuilder;
typedef struct _bobbuilderbuildplugincontrolControlFileBuilderClass bobbuilderbuildplugincontrolControlFileBuilderClass;
typedef struct _bobbuilderbuildplugincontrolControlFileBuilderPrivate bobbuilderbuildplugincontrolControlFileBuilderPrivate;

#define BOB_BUILDER_BUILD_PLUGIN_CONTROL_TYPE_CONTROL_FILE_DEBIAN_PACKAGE (bob_builder_build_plugin_control_control_file_debian_package_get_type ())
#define BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_DEBIAN_PACKAGE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOB_BUILDER_BUILD_PLUGIN_CONTROL_TYPE_CONTROL_FILE_DEBIAN_PACKAGE, bobbuilderbuildplugincontrolControlFileDebianPackage))
#define BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_DEBIAN_PACKAGE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BOB_BUILDER_BUILD_PLUGIN_CONTROL_TYPE_CONTROL_FILE_DEBIAN_PACKAGE, bobbuilderbuildplugincontrolControlFileDebianPackageClass))
#define BOB_BUILDER_BUILD_PLUGIN_CONTROL_IS_CONTROL_FILE_DEBIAN_PACKAGE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOB_BUILDER_BUILD_PLUGIN_CONTROL_TYPE_CONTROL_FILE_DEBIAN_PACKAGE))
#define BOB_BUILDER_BUILD_PLUGIN_CONTROL_IS_CONTROL_FILE_DEBIAN_PACKAGE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BOB_BUILDER_BUILD_PLUGIN_CONTROL_TYPE_CONTROL_FILE_DEBIAN_PACKAGE))
#define BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_DEBIAN_PACKAGE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BOB_BUILDER_BUILD_PLUGIN_CONTROL_TYPE_CONTROL_FILE_DEBIAN_PACKAGE, bobbuilderbuildplugincontrolControlFileDebianPackageClass))

typedef struct _bobbuilderbuildplugincontrolControlFileDebianPackage bobbuilderbuildplugincontrolControlFileDebianPackage;
typedef struct _bobbuilderbuildplugincontrolControlFileDebianPackageClass bobbuilderbuildplugincontrolControlFileDebianPackageClass;

#define BOB_BUILDER_BUILD_PLUGIN_CONTROL_TYPE_CONTROL_FILE_PROPERTIES (bob_builder_build_plugin_control_control_file_properties_get_type ())
#define BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_PROPERTIES(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOB_BUILDER_BUILD_PLUGIN_CONTROL_TYPE_CONTROL_FILE_PROPERTIES, bobbuilderbuildplugincontrolControlFileProperties))
#define BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_PROPERTIES_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BOB_BUILDER_BUILD_PLUGIN_CONTROL_TYPE_CONTROL_FILE_PROPERTIES, bobbuilderbuildplugincontrolControlFilePropertiesClass))
#define BOB_BUILDER_BUILD_PLUGIN_CONTROL_IS_CONTROL_FILE_PROPERTIES(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOB_BUILDER_BUILD_PLUGIN_CONTROL_TYPE_CONTROL_FILE_PROPERTIES))
#define BOB_BUILDER_BUILD_PLUGIN_CONTROL_IS_CONTROL_FILE_PROPERTIES_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BOB_BUILDER_BUILD_PLUGIN_CONTROL_TYPE_CONTROL_FILE_PROPERTIES))
#define BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_PROPERTIES_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BOB_BUILDER_BUILD_PLUGIN_CONTROL_TYPE_CONTROL_FILE_PROPERTIES, bobbuilderbuildplugincontrolControlFilePropertiesClass))

typedef struct _bobbuilderbuildplugincontrolControlFileProperties bobbuilderbuildplugincontrolControlFileProperties;
typedef struct _bobbuilderbuildplugincontrolControlFilePropertiesClass bobbuilderbuildplugincontrolControlFilePropertiesClass;
typedef struct _bobbuilderbuildplugincontrolControlFilePropertiesPrivate bobbuilderbuildplugincontrolControlFilePropertiesPrivate;

#define BOB_BUILDER_BUILD_PLUGIN_CONTROL_TYPE_CONTROL_FILE_PRIORITY_ENUM (bob_builder_build_plugin_control_control_file_priority_enum_get_type ())
typedef struct _bobbuilderbuildplugincontrolControlFileDebianPackagePrivate bobbuilderbuildplugincontrolControlFileDebianPackagePrivate;

#define BOB_BUILDER_BUILD_PLUGIN_CONTROL_TYPE_CONTROL_FILE_GENERATOR (bob_builder_build_plugin_control_control_file_generator_get_type ())
#define BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_GENERATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOB_BUILDER_BUILD_PLUGIN_CONTROL_TYPE_CONTROL_FILE_GENERATOR, bobbuilderbuildplugincontrolControlFileGenerator))
#define BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_GENERATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BOB_BUILDER_BUILD_PLUGIN_CONTROL_TYPE_CONTROL_FILE_GENERATOR, bobbuilderbuildplugincontrolControlFileGeneratorClass))
#define BOB_BUILDER_BUILD_PLUGIN_CONTROL_IS_CONTROL_FILE_GENERATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOB_BUILDER_BUILD_PLUGIN_CONTROL_TYPE_CONTROL_FILE_GENERATOR))
#define BOB_BUILDER_BUILD_PLUGIN_CONTROL_IS_CONTROL_FILE_GENERATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BOB_BUILDER_BUILD_PLUGIN_CONTROL_TYPE_CONTROL_FILE_GENERATOR))
#define BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_GENERATOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BOB_BUILDER_BUILD_PLUGIN_CONTROL_TYPE_CONTROL_FILE_GENERATOR, bobbuilderbuildplugincontrolControlFileGeneratorClass))

typedef struct _bobbuilderbuildplugincontrolControlFileGenerator bobbuilderbuildplugincontrolControlFileGenerator;
typedef struct _bobbuilderbuildplugincontrolControlFileGeneratorClass bobbuilderbuildplugincontrolControlFileGeneratorClass;
typedef struct _bobbuilderbuildplugincontrolControlFileGeneratorPrivate bobbuilderbuildplugincontrolControlFileGeneratorPrivate;

#define BOB_BUILDER_BUILD_PLUGIN_PROPERTIES_TYPE_ABSTRACT_PROPERTY_PRINTER (bob_builder_build_plugin_properties_abstract_property_printer_get_type ())
#define BOB_BUILDER_BUILD_PLUGIN_PROPERTIES_ABSTRACT_PROPERTY_PRINTER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOB_BUILDER_BUILD_PLUGIN_PROPERTIES_TYPE_ABSTRACT_PROPERTY_PRINTER, bobbuilderbuildpluginpropertiesAbstractPropertyPrinter))
#define BOB_BUILDER_BUILD_PLUGIN_PROPERTIES_ABSTRACT_PROPERTY_PRINTER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BOB_BUILDER_BUILD_PLUGIN_PROPERTIES_TYPE_ABSTRACT_PROPERTY_PRINTER, bobbuilderbuildpluginpropertiesAbstractPropertyPrinterClass))
#define BOB_BUILDER_BUILD_PLUGIN_PROPERTIES_IS_ABSTRACT_PROPERTY_PRINTER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOB_BUILDER_BUILD_PLUGIN_PROPERTIES_TYPE_ABSTRACT_PROPERTY_PRINTER))
#define BOB_BUILDER_BUILD_PLUGIN_PROPERTIES_IS_ABSTRACT_PROPERTY_PRINTER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BOB_BUILDER_BUILD_PLUGIN_PROPERTIES_TYPE_ABSTRACT_PROPERTY_PRINTER))
#define BOB_BUILDER_BUILD_PLUGIN_PROPERTIES_ABSTRACT_PROPERTY_PRINTER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BOB_BUILDER_BUILD_PLUGIN_PROPERTIES_TYPE_ABSTRACT_PROPERTY_PRINTER, bobbuilderbuildpluginpropertiesAbstractPropertyPrinterClass))

typedef struct _bobbuilderbuildpluginpropertiesAbstractPropertyPrinter bobbuilderbuildpluginpropertiesAbstractPropertyPrinter;
typedef struct _bobbuilderbuildpluginpropertiesAbstractPropertyPrinterClass bobbuilderbuildpluginpropertiesAbstractPropertyPrinterClass;
typedef struct _bobbuilderbuildpluginpropertiesAbstractPropertyPrinterPrivate bobbuilderbuildpluginpropertiesAbstractPropertyPrinterPrivate;

#define BOB_BUILDER_BUILD_PLUGIN_CONTROL_TYPE_CONTROL_FILE_PROPERTY_PRINTER (bob_builder_build_plugin_control_control_file_property_printer_get_type ())
#define BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_PROPERTY_PRINTER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOB_BUILDER_BUILD_PLUGIN_CONTROL_TYPE_CONTROL_FILE_PROPERTY_PRINTER, bobbuilderbuildplugincontrolControlFilePropertyPrinter))
#define BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_PROPERTY_PRINTER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BOB_BUILDER_BUILD_PLUGIN_CONTROL_TYPE_CONTROL_FILE_PROPERTY_PRINTER, bobbuilderbuildplugincontrolControlFilePropertyPrinterClass))
#define BOB_BUILDER_BUILD_PLUGIN_CONTROL_IS_CONTROL_FILE_PROPERTY_PRINTER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOB_BUILDER_BUILD_PLUGIN_CONTROL_TYPE_CONTROL_FILE_PROPERTY_PRINTER))
#define BOB_BUILDER_BUILD_PLUGIN_CONTROL_IS_CONTROL_FILE_PROPERTY_PRINTER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BOB_BUILDER_BUILD_PLUGIN_CONTROL_TYPE_CONTROL_FILE_PROPERTY_PRINTER))
#define BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_PROPERTY_PRINTER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BOB_BUILDER_BUILD_PLUGIN_CONTROL_TYPE_CONTROL_FILE_PROPERTY_PRINTER, bobbuilderbuildplugincontrolControlFilePropertyPrinterClass))

typedef struct _bobbuilderbuildplugincontrolControlFilePropertyPrinter bobbuilderbuildplugincontrolControlFilePropertyPrinter;
typedef struct _bobbuilderbuildplugincontrolControlFilePropertyPrinterClass bobbuilderbuildplugincontrolControlFilePropertyPrinterClass;
typedef struct _bobbuilderbuildplugincontrolControlFilePropertyPrinterPrivate bobbuilderbuildplugincontrolControlFilePropertyPrinterPrivate;

#define BOB_BUILDER_BUILD_PLUGIN_TYPE_TEMPORARY_DEBIAN_ARCHIVE_DIRECTORY_STRUCTURE (bob_builder_build_plugin_temporary_debian_archive_directory_structure_get_type ())
#define BOB_BUILDER_BUILD_PLUGIN_TEMPORARY_DEBIAN_ARCHIVE_DIRECTORY_STRUCTURE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOB_BUILDER_BUILD_PLUGIN_TYPE_TEMPORARY_DEBIAN_ARCHIVE_DIRECTORY_STRUCTURE, bobbuilderbuildpluginTemporaryDebianArchiveDirectoryStructure))
#define BOB_BUILDER_BUILD_PLUGIN_TEMPORARY_DEBIAN_ARCHIVE_DIRECTORY_STRUCTURE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BOB_BUILDER_BUILD_PLUGIN_TYPE_TEMPORARY_DEBIAN_ARCHIVE_DIRECTORY_STRUCTURE, bobbuilderbuildpluginTemporaryDebianArchiveDirectoryStructureClass))
#define BOB_BUILDER_BUILD_PLUGIN_IS_TEMPORARY_DEBIAN_ARCHIVE_DIRECTORY_STRUCTURE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOB_BUILDER_BUILD_PLUGIN_TYPE_TEMPORARY_DEBIAN_ARCHIVE_DIRECTORY_STRUCTURE))
#define BOB_BUILDER_BUILD_PLUGIN_IS_TEMPORARY_DEBIAN_ARCHIVE_DIRECTORY_STRUCTURE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BOB_BUILDER_BUILD_PLUGIN_TYPE_TEMPORARY_DEBIAN_ARCHIVE_DIRECTORY_STRUCTURE))
#define BOB_BUILDER_BUILD_PLUGIN_TEMPORARY_DEBIAN_ARCHIVE_DIRECTORY_STRUCTURE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BOB_BUILDER_BUILD_PLUGIN_TYPE_TEMPORARY_DEBIAN_ARCHIVE_DIRECTORY_STRUCTURE, bobbuilderbuildpluginTemporaryDebianArchiveDirectoryStructureClass))

typedef struct _bobbuilderbuildpluginTemporaryDebianArchiveDirectoryStructure bobbuilderbuildpluginTemporaryDebianArchiveDirectoryStructure;
typedef struct _bobbuilderbuildpluginTemporaryDebianArchiveDirectoryStructureClass bobbuilderbuildpluginTemporaryDebianArchiveDirectoryStructureClass;
typedef struct _bobbuilderbuildpluginTemporaryDebianArchiveDirectoryStructurePrivate bobbuilderbuildpluginTemporaryDebianArchiveDirectoryStructurePrivate;

#define BOB_BUILDER_BUILD_PLUGIN_TYPE_BUILD_DEBIAN_PACKAGE_PLUGIN (bob_builder_build_plugin_build_debian_package_plugin_get_type ())
#define BOB_BUILDER_BUILD_PLUGIN_BUILD_DEBIAN_PACKAGE_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOB_BUILDER_BUILD_PLUGIN_TYPE_BUILD_DEBIAN_PACKAGE_PLUGIN, bobbuilderbuildpluginBuildDebianPackagePlugin))
#define BOB_BUILDER_BUILD_PLUGIN_BUILD_DEBIAN_PACKAGE_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BOB_BUILDER_BUILD_PLUGIN_TYPE_BUILD_DEBIAN_PACKAGE_PLUGIN, bobbuilderbuildpluginBuildDebianPackagePluginClass))
#define BOB_BUILDER_BUILD_PLUGIN_IS_BUILD_DEBIAN_PACKAGE_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOB_BUILDER_BUILD_PLUGIN_TYPE_BUILD_DEBIAN_PACKAGE_PLUGIN))
#define BOB_BUILDER_BUILD_PLUGIN_IS_BUILD_DEBIAN_PACKAGE_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BOB_BUILDER_BUILD_PLUGIN_TYPE_BUILD_DEBIAN_PACKAGE_PLUGIN))
#define BOB_BUILDER_BUILD_PLUGIN_BUILD_DEBIAN_PACKAGE_PLUGIN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BOB_BUILDER_BUILD_PLUGIN_TYPE_BUILD_DEBIAN_PACKAGE_PLUGIN, bobbuilderbuildpluginBuildDebianPackagePluginClass))

typedef struct _bobbuilderbuildpluginBuildDebianPackagePlugin bobbuilderbuildpluginBuildDebianPackagePlugin;
typedef struct _bobbuilderbuildpluginBuildDebianPackagePluginClass bobbuilderbuildpluginBuildDebianPackagePluginClass;
typedef struct _bobbuilderbuildpluginBuildDebianPackagePluginPrivate bobbuilderbuildpluginBuildDebianPackagePluginPrivate;

#define BOB_BUILDER_BUILD_PLUGIN_TYPE_WORKING_DIRECTORY_STRUCTURE (bob_builder_build_plugin_working_directory_structure_get_type ())
#define BOB_BUILDER_BUILD_PLUGIN_WORKING_DIRECTORY_STRUCTURE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOB_BUILDER_BUILD_PLUGIN_TYPE_WORKING_DIRECTORY_STRUCTURE, bobbuilderbuildpluginWorkingDirectoryStructure))
#define BOB_BUILDER_BUILD_PLUGIN_WORKING_DIRECTORY_STRUCTURE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BOB_BUILDER_BUILD_PLUGIN_TYPE_WORKING_DIRECTORY_STRUCTURE, bobbuilderbuildpluginWorkingDirectoryStructureClass))
#define BOB_BUILDER_BUILD_PLUGIN_IS_WORKING_DIRECTORY_STRUCTURE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOB_BUILDER_BUILD_PLUGIN_TYPE_WORKING_DIRECTORY_STRUCTURE))
#define BOB_BUILDER_BUILD_PLUGIN_IS_WORKING_DIRECTORY_STRUCTURE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BOB_BUILDER_BUILD_PLUGIN_TYPE_WORKING_DIRECTORY_STRUCTURE))
#define BOB_BUILDER_BUILD_PLUGIN_WORKING_DIRECTORY_STRUCTURE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BOB_BUILDER_BUILD_PLUGIN_TYPE_WORKING_DIRECTORY_STRUCTURE, bobbuilderbuildpluginWorkingDirectoryStructureClass))

typedef struct _bobbuilderbuildpluginWorkingDirectoryStructure bobbuilderbuildpluginWorkingDirectoryStructure;
typedef struct _bobbuilderbuildpluginWorkingDirectoryStructureClass bobbuilderbuildpluginWorkingDirectoryStructureClass;
typedef struct _bobbuilderbuildpluginWorkingDirectoryStructurePrivate bobbuilderbuildpluginWorkingDirectoryStructurePrivate;

#define BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_TYPE_DEBIAN_PACKAGE_DEPEDENCY_RESOLVER (bob_builder_build_plugin_dependency_debian_package_depedency_resolver_get_type ())
#define BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_DEBIAN_PACKAGE_DEPEDENCY_RESOLVER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_TYPE_DEBIAN_PACKAGE_DEPEDENCY_RESOLVER, bobbuilderbuildplugindependencyDebianPackageDepedencyResolver))
#define BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_DEBIAN_PACKAGE_DEPEDENCY_RESOLVER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_TYPE_DEBIAN_PACKAGE_DEPEDENCY_RESOLVER, bobbuilderbuildplugindependencyDebianPackageDepedencyResolverClass))
#define BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_IS_DEBIAN_PACKAGE_DEPEDENCY_RESOLVER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_TYPE_DEBIAN_PACKAGE_DEPEDENCY_RESOLVER))
#define BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_IS_DEBIAN_PACKAGE_DEPEDENCY_RESOLVER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_TYPE_DEBIAN_PACKAGE_DEPEDENCY_RESOLVER))
#define BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_DEBIAN_PACKAGE_DEPEDENCY_RESOLVER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_TYPE_DEBIAN_PACKAGE_DEPEDENCY_RESOLVER, bobbuilderbuildplugindependencyDebianPackageDepedencyResolverClass))

typedef struct _bobbuilderbuildplugindependencyDebianPackageDepedencyResolver bobbuilderbuildplugindependencyDebianPackageDepedencyResolver;
typedef struct _bobbuilderbuildplugindependencyDebianPackageDepedencyResolverClass bobbuilderbuildplugindependencyDebianPackageDepedencyResolverClass;
typedef struct _bobbuilderbuildplugindependencyDebianPackageDepedencyResolverPrivate bobbuilderbuildplugindependencyDebianPackageDepedencyResolverPrivate;

#define BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_TYPE_VAPI_FILE_CODE_VISITOR (bob_builder_build_plugin_dependency_vapi_file_code_visitor_get_type ())
#define BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_VAPI_FILE_CODE_VISITOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_TYPE_VAPI_FILE_CODE_VISITOR, bobbuilderbuildplugindependencyVapiFileCodeVisitor))
#define BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_VAPI_FILE_CODE_VISITOR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_TYPE_VAPI_FILE_CODE_VISITOR, bobbuilderbuildplugindependencyVapiFileCodeVisitorClass))
#define BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_IS_VAPI_FILE_CODE_VISITOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_TYPE_VAPI_FILE_CODE_VISITOR))
#define BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_IS_VAPI_FILE_CODE_VISITOR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_TYPE_VAPI_FILE_CODE_VISITOR))
#define BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_VAPI_FILE_CODE_VISITOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_TYPE_VAPI_FILE_CODE_VISITOR, bobbuilderbuildplugindependencyVapiFileCodeVisitorClass))

typedef struct _bobbuilderbuildplugindependencyVapiFileCodeVisitor bobbuilderbuildplugindependencyVapiFileCodeVisitor;
typedef struct _bobbuilderbuildplugindependencyVapiFileCodeVisitorClass bobbuilderbuildplugindependencyVapiFileCodeVisitorClass;
typedef struct _bobbuilderbuildplugindependencyVapiFileCodeVisitorPrivate bobbuilderbuildplugindependencyVapiFileCodeVisitorPrivate;

#define BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_TYPE_APT_FILE_PACKAGE_RESOLVER (bob_builder_build_plugin_dependency_apt_file_package_resolver_get_type ())
#define BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_APT_FILE_PACKAGE_RESOLVER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_TYPE_APT_FILE_PACKAGE_RESOLVER, bobbuilderbuildplugindependencyAptFilePackageResolver))
#define BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_APT_FILE_PACKAGE_RESOLVER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_TYPE_APT_FILE_PACKAGE_RESOLVER, bobbuilderbuildplugindependencyAptFilePackageResolverClass))
#define BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_IS_APT_FILE_PACKAGE_RESOLVER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_TYPE_APT_FILE_PACKAGE_RESOLVER))
#define BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_IS_APT_FILE_PACKAGE_RESOLVER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_TYPE_APT_FILE_PACKAGE_RESOLVER))
#define BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_APT_FILE_PACKAGE_RESOLVER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_TYPE_APT_FILE_PACKAGE_RESOLVER, bobbuilderbuildplugindependencyAptFilePackageResolverClass))

typedef struct _bobbuilderbuildplugindependencyAptFilePackageResolver bobbuilderbuildplugindependencyAptFilePackageResolver;
typedef struct _bobbuilderbuildplugindependencyAptFilePackageResolverClass bobbuilderbuildplugindependencyAptFilePackageResolverClass;
typedef struct _bobbuilderbuildplugindependencyAptFilePackageResolverPrivate bobbuilderbuildplugindependencyAptFilePackageResolverPrivate;

#define BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_TYPE_CHEADER (bob_builder_build_plugin_dependency_cheader_get_type ())
#define BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_CHEADER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_TYPE_CHEADER, bobbuilderbuildplugindependencyCHeader))
#define BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_CHEADER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_TYPE_CHEADER, bobbuilderbuildplugindependencyCHeaderClass))
#define BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_IS_CHEADER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_TYPE_CHEADER))
#define BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_IS_CHEADER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_TYPE_CHEADER))
#define BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_CHEADER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_TYPE_CHEADER, bobbuilderbuildplugindependencyCHeaderClass))

typedef struct _bobbuilderbuildplugindependencyCHeader bobbuilderbuildplugindependencyCHeader;
typedef struct _bobbuilderbuildplugindependencyCHeaderClass bobbuilderbuildplugindependencyCHeaderClass;
typedef struct _bobbuilderbuildplugindependencyCHeaderPrivate bobbuilderbuildplugindependencyCHeaderPrivate;

#define BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_TYPE_DPKG_PACKAGE_RESOLVER (bob_builder_build_plugin_dependency_dpkg_package_resolver_get_type ())
#define BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_DPKG_PACKAGE_RESOLVER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_TYPE_DPKG_PACKAGE_RESOLVER, bobbuilderbuildplugindependencyDpkgPackageResolver))
#define BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_DPKG_PACKAGE_RESOLVER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_TYPE_DPKG_PACKAGE_RESOLVER, bobbuilderbuildplugindependencyDpkgPackageResolverClass))
#define BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_IS_DPKG_PACKAGE_RESOLVER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_TYPE_DPKG_PACKAGE_RESOLVER))
#define BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_IS_DPKG_PACKAGE_RESOLVER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_TYPE_DPKG_PACKAGE_RESOLVER))
#define BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_DPKG_PACKAGE_RESOLVER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_TYPE_DPKG_PACKAGE_RESOLVER, bobbuilderbuildplugindependencyDpkgPackageResolverClass))

typedef struct _bobbuilderbuildplugindependencyDpkgPackageResolver bobbuilderbuildplugindependencyDpkgPackageResolver;
typedef struct _bobbuilderbuildplugindependencyDpkgPackageResolverClass bobbuilderbuildplugindependencyDpkgPackageResolverClass;
typedef struct _bobbuilderbuildplugindependencyDpkgPackageResolverPrivate bobbuilderbuildplugindependencyDpkgPackageResolverPrivate;

#define BOB_BUILDER_BUILD_PLUGIN_EXECUTE_TYPE_EXECUTABLE_RUNNER (bob_builder_build_plugin_execute_executable_runner_get_type ())
#define BOB_BUILDER_BUILD_PLUGIN_EXECUTE_EXECUTABLE_RUNNER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOB_BUILDER_BUILD_PLUGIN_EXECUTE_TYPE_EXECUTABLE_RUNNER, bobbuilderbuildpluginexecuteExecutableRunner))
#define BOB_BUILDER_BUILD_PLUGIN_EXECUTE_EXECUTABLE_RUNNER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BOB_BUILDER_BUILD_PLUGIN_EXECUTE_TYPE_EXECUTABLE_RUNNER, bobbuilderbuildpluginexecuteExecutableRunnerClass))
#define BOB_BUILDER_BUILD_PLUGIN_EXECUTE_IS_EXECUTABLE_RUNNER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOB_BUILDER_BUILD_PLUGIN_EXECUTE_TYPE_EXECUTABLE_RUNNER))
#define BOB_BUILDER_BUILD_PLUGIN_EXECUTE_IS_EXECUTABLE_RUNNER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BOB_BUILDER_BUILD_PLUGIN_EXECUTE_TYPE_EXECUTABLE_RUNNER))
#define BOB_BUILDER_BUILD_PLUGIN_EXECUTE_EXECUTABLE_RUNNER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BOB_BUILDER_BUILD_PLUGIN_EXECUTE_TYPE_EXECUTABLE_RUNNER, bobbuilderbuildpluginexecuteExecutableRunnerClass))

typedef struct _bobbuilderbuildpluginexecuteExecutableRunner bobbuilderbuildpluginexecuteExecutableRunner;
typedef struct _bobbuilderbuildpluginexecuteExecutableRunnerClass bobbuilderbuildpluginexecuteExecutableRunnerClass;
typedef struct _bobbuilderbuildpluginexecuteExecutableRunnerPrivate bobbuilderbuildpluginexecuteExecutableRunnerPrivate;

#define BOB_BUILDER_BUILD_PLUGIN_EXECUTE_TYPE_WHICH_CHECKER (bob_builder_build_plugin_execute_which_checker_get_type ())
#define BOB_BUILDER_BUILD_PLUGIN_EXECUTE_WHICH_CHECKER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOB_BUILDER_BUILD_PLUGIN_EXECUTE_TYPE_WHICH_CHECKER, bobbuilderbuildpluginexecuteWhichChecker))
#define BOB_BUILDER_BUILD_PLUGIN_EXECUTE_WHICH_CHECKER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BOB_BUILDER_BUILD_PLUGIN_EXECUTE_TYPE_WHICH_CHECKER, bobbuilderbuildpluginexecuteWhichCheckerClass))
#define BOB_BUILDER_BUILD_PLUGIN_EXECUTE_IS_WHICH_CHECKER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOB_BUILDER_BUILD_PLUGIN_EXECUTE_TYPE_WHICH_CHECKER))
#define BOB_BUILDER_BUILD_PLUGIN_EXECUTE_IS_WHICH_CHECKER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BOB_BUILDER_BUILD_PLUGIN_EXECUTE_TYPE_WHICH_CHECKER))
#define BOB_BUILDER_BUILD_PLUGIN_EXECUTE_WHICH_CHECKER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BOB_BUILDER_BUILD_PLUGIN_EXECUTE_TYPE_WHICH_CHECKER, bobbuilderbuildpluginexecuteWhichCheckerClass))

typedef struct _bobbuilderbuildpluginexecuteWhichChecker bobbuilderbuildpluginexecuteWhichChecker;
typedef struct _bobbuilderbuildpluginexecuteWhichCheckerClass bobbuilderbuildpluginexecuteWhichCheckerClass;
typedef struct _bobbuilderbuildpluginexecuteWhichCheckerPrivate bobbuilderbuildpluginexecuteWhichCheckerPrivate;

#define BOB_BUILDER_BUILD_PLUGIN_EXECUTE_TYPE_PIPED_EXECUTABLE_RUNNER (bob_builder_build_plugin_execute_piped_executable_runner_get_type ())
#define BOB_BUILDER_BUILD_PLUGIN_EXECUTE_PIPED_EXECUTABLE_RUNNER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOB_BUILDER_BUILD_PLUGIN_EXECUTE_TYPE_PIPED_EXECUTABLE_RUNNER, bobbuilderbuildpluginexecutePipedExecutableRunner))
#define BOB_BUILDER_BUILD_PLUGIN_EXECUTE_PIPED_EXECUTABLE_RUNNER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BOB_BUILDER_BUILD_PLUGIN_EXECUTE_TYPE_PIPED_EXECUTABLE_RUNNER, bobbuilderbuildpluginexecutePipedExecutableRunnerClass))
#define BOB_BUILDER_BUILD_PLUGIN_EXECUTE_IS_PIPED_EXECUTABLE_RUNNER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOB_BUILDER_BUILD_PLUGIN_EXECUTE_TYPE_PIPED_EXECUTABLE_RUNNER))
#define BOB_BUILDER_BUILD_PLUGIN_EXECUTE_IS_PIPED_EXECUTABLE_RUNNER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BOB_BUILDER_BUILD_PLUGIN_EXECUTE_TYPE_PIPED_EXECUTABLE_RUNNER))
#define BOB_BUILDER_BUILD_PLUGIN_EXECUTE_PIPED_EXECUTABLE_RUNNER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BOB_BUILDER_BUILD_PLUGIN_EXECUTE_TYPE_PIPED_EXECUTABLE_RUNNER, bobbuilderbuildpluginexecutePipedExecutableRunnerClass))

typedef struct _bobbuilderbuildpluginexecutePipedExecutableRunner bobbuilderbuildpluginexecutePipedExecutableRunner;
typedef struct _bobbuilderbuildpluginexecutePipedExecutableRunnerClass bobbuilderbuildpluginexecutePipedExecutableRunnerClass;
typedef struct _bobbuilderbuildpluginexecutePipedExecutableRunnerPrivate bobbuilderbuildpluginexecutePipedExecutableRunnerPrivate;

#define BOB_BUILDER_BUILD_PLUGIN_EXECUTE_TYPE_PIPED_EXECUTABLE_OUTPUT (bob_builder_build_plugin_execute_piped_executable_output_get_type ())
#define BOB_BUILDER_BUILD_PLUGIN_EXECUTE_PIPED_EXECUTABLE_OUTPUT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOB_BUILDER_BUILD_PLUGIN_EXECUTE_TYPE_PIPED_EXECUTABLE_OUTPUT, bobbuilderbuildpluginexecutePipedExecutableOutput))
#define BOB_BUILDER_BUILD_PLUGIN_EXECUTE_PIPED_EXECUTABLE_OUTPUT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BOB_BUILDER_BUILD_PLUGIN_EXECUTE_TYPE_PIPED_EXECUTABLE_OUTPUT, bobbuilderbuildpluginexecutePipedExecutableOutputClass))
#define BOB_BUILDER_BUILD_PLUGIN_EXECUTE_IS_PIPED_EXECUTABLE_OUTPUT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOB_BUILDER_BUILD_PLUGIN_EXECUTE_TYPE_PIPED_EXECUTABLE_OUTPUT))
#define BOB_BUILDER_BUILD_PLUGIN_EXECUTE_IS_PIPED_EXECUTABLE_OUTPUT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BOB_BUILDER_BUILD_PLUGIN_EXECUTE_TYPE_PIPED_EXECUTABLE_OUTPUT))
#define BOB_BUILDER_BUILD_PLUGIN_EXECUTE_PIPED_EXECUTABLE_OUTPUT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BOB_BUILDER_BUILD_PLUGIN_EXECUTE_TYPE_PIPED_EXECUTABLE_OUTPUT, bobbuilderbuildpluginexecutePipedExecutableOutputClass))

typedef struct _bobbuilderbuildpluginexecutePipedExecutableOutput bobbuilderbuildpluginexecutePipedExecutableOutput;
typedef struct _bobbuilderbuildpluginexecutePipedExecutableOutputClass bobbuilderbuildpluginexecutePipedExecutableOutputClass;
typedef struct _bobbuilderbuildpluginexecutePipedExecutableOutputPrivate bobbuilderbuildpluginexecutePipedExecutableOutputPrivate;

#define BOB_BUILDER_BUILD_PLUGIN_PROPERTIES_TYPE_PROPERTIES (bob_builder_build_plugin_properties_properties_get_type ())
#define BOB_BUILDER_BUILD_PLUGIN_PROPERTIES_PROPERTIES(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOB_BUILDER_BUILD_PLUGIN_PROPERTIES_TYPE_PROPERTIES, bobbuilderbuildpluginpropertiesProperties))
#define BOB_BUILDER_BUILD_PLUGIN_PROPERTIES_PROPERTIES_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BOB_BUILDER_BUILD_PLUGIN_PROPERTIES_TYPE_PROPERTIES, bobbuilderbuildpluginpropertiesPropertiesClass))
#define BOB_BUILDER_BUILD_PLUGIN_PROPERTIES_IS_PROPERTIES(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOB_BUILDER_BUILD_PLUGIN_PROPERTIES_TYPE_PROPERTIES))
#define BOB_BUILDER_BUILD_PLUGIN_PROPERTIES_IS_PROPERTIES_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BOB_BUILDER_BUILD_PLUGIN_PROPERTIES_TYPE_PROPERTIES))
#define BOB_BUILDER_BUILD_PLUGIN_PROPERTIES_PROPERTIES_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BOB_BUILDER_BUILD_PLUGIN_PROPERTIES_TYPE_PROPERTIES, bobbuilderbuildpluginpropertiesPropertiesClass))

typedef struct _bobbuilderbuildpluginpropertiesProperties bobbuilderbuildpluginpropertiesProperties;
typedef struct _bobbuilderbuildpluginpropertiesPropertiesClass bobbuilderbuildpluginpropertiesPropertiesClass;
typedef struct _bobbuilderbuildpluginpropertiesPropertiesPrivate bobbuilderbuildpluginpropertiesPropertiesPrivate;

#define BOB_BUILDER_BUILD_PLUGIN_PROPERTIES_TYPE_PROPERTIES_FILE_WRITER (bob_builder_build_plugin_properties_properties_file_writer_get_type ())
#define BOB_BUILDER_BUILD_PLUGIN_PROPERTIES_PROPERTIES_FILE_WRITER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOB_BUILDER_BUILD_PLUGIN_PROPERTIES_TYPE_PROPERTIES_FILE_WRITER, bobbuilderbuildpluginpropertiesPropertiesFileWriter))
#define BOB_BUILDER_BUILD_PLUGIN_PROPERTIES_PROPERTIES_FILE_WRITER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BOB_BUILDER_BUILD_PLUGIN_PROPERTIES_TYPE_PROPERTIES_FILE_WRITER, bobbuilderbuildpluginpropertiesPropertiesFileWriterClass))
#define BOB_BUILDER_BUILD_PLUGIN_PROPERTIES_IS_PROPERTIES_FILE_WRITER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOB_BUILDER_BUILD_PLUGIN_PROPERTIES_TYPE_PROPERTIES_FILE_WRITER))
#define BOB_BUILDER_BUILD_PLUGIN_PROPERTIES_IS_PROPERTIES_FILE_WRITER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BOB_BUILDER_BUILD_PLUGIN_PROPERTIES_TYPE_PROPERTIES_FILE_WRITER))
#define BOB_BUILDER_BUILD_PLUGIN_PROPERTIES_PROPERTIES_FILE_WRITER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BOB_BUILDER_BUILD_PLUGIN_PROPERTIES_TYPE_PROPERTIES_FILE_WRITER, bobbuilderbuildpluginpropertiesPropertiesFileWriterClass))

typedef struct _bobbuilderbuildpluginpropertiesPropertiesFileWriter bobbuilderbuildpluginpropertiesPropertiesFileWriter;
typedef struct _bobbuilderbuildpluginpropertiesPropertiesFileWriterClass bobbuilderbuildpluginpropertiesPropertiesFileWriterClass;
typedef struct _bobbuilderbuildpluginpropertiesPropertiesFileWriterPrivate bobbuilderbuildpluginpropertiesPropertiesFileWriterPrivate;

#define BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_TYPE_DEBIAN_ARCHIVE_CREATOR (bob_builder_build_plugin_archive_debian_archive_creator_get_type ())
#define BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_DEBIAN_ARCHIVE_CREATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_TYPE_DEBIAN_ARCHIVE_CREATOR, bobbuilderbuildpluginarchiveDebianArchiveCreator))
#define BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_DEBIAN_ARCHIVE_CREATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_TYPE_DEBIAN_ARCHIVE_CREATOR, bobbuilderbuildpluginarchiveDebianArchiveCreatorClass))
#define BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_IS_DEBIAN_ARCHIVE_CREATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_TYPE_DEBIAN_ARCHIVE_CREATOR))
#define BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_IS_DEBIAN_ARCHIVE_CREATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_TYPE_DEBIAN_ARCHIVE_CREATOR))
#define BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_DEBIAN_ARCHIVE_CREATOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_TYPE_DEBIAN_ARCHIVE_CREATOR, bobbuilderbuildpluginarchiveDebianArchiveCreatorClass))

typedef struct _bobbuilderbuildpluginarchiveDebianArchiveCreator bobbuilderbuildpluginarchiveDebianArchiveCreator;
typedef struct _bobbuilderbuildpluginarchiveDebianArchiveCreatorClass bobbuilderbuildpluginarchiveDebianArchiveCreatorClass;
typedef struct _bobbuilderbuildpluginarchiveDebianArchiveCreatorPrivate bobbuilderbuildpluginarchiveDebianArchiveCreatorPrivate;

#define BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_TYPE_ARCHIVE_CREATOR (bob_builder_build_plugin_archive_archive_creator_get_type ())
#define BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_ARCHIVE_CREATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_TYPE_ARCHIVE_CREATOR, bobbuilderbuildpluginarchiveArchiveCreator))
#define BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_ARCHIVE_CREATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_TYPE_ARCHIVE_CREATOR, bobbuilderbuildpluginarchiveArchiveCreatorClass))
#define BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_IS_ARCHIVE_CREATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_TYPE_ARCHIVE_CREATOR))
#define BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_IS_ARCHIVE_CREATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_TYPE_ARCHIVE_CREATOR))
#define BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_ARCHIVE_CREATOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_TYPE_ARCHIVE_CREATOR, bobbuilderbuildpluginarchiveArchiveCreatorClass))

typedef struct _bobbuilderbuildpluginarchiveArchiveCreator bobbuilderbuildpluginarchiveArchiveCreator;
typedef struct _bobbuilderbuildpluginarchiveArchiveCreatorClass bobbuilderbuildpluginarchiveArchiveCreatorClass;
typedef struct _bobbuilderbuildpluginarchiveArchiveCreatorPrivate bobbuilderbuildpluginarchiveArchiveCreatorPrivate;

#define BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_TYPE_ARCHIVE_FILE (bob_builder_build_plugin_archive_archive_file_get_type ())
#define BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_ARCHIVE_FILE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_TYPE_ARCHIVE_FILE, bobbuilderbuildpluginarchiveArchiveFile))
#define BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_ARCHIVE_FILE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_TYPE_ARCHIVE_FILE, bobbuilderbuildpluginarchiveArchiveFileClass))
#define BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_IS_ARCHIVE_FILE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_TYPE_ARCHIVE_FILE))
#define BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_IS_ARCHIVE_FILE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_TYPE_ARCHIVE_FILE))
#define BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_ARCHIVE_FILE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_TYPE_ARCHIVE_FILE, bobbuilderbuildpluginarchiveArchiveFileClass))

typedef struct _bobbuilderbuildpluginarchiveArchiveFile bobbuilderbuildpluginarchiveArchiveFile;
typedef struct _bobbuilderbuildpluginarchiveArchiveFileClass bobbuilderbuildpluginarchiveArchiveFileClass;
typedef struct _bobbuilderbuildpluginarchiveArchiveFilePrivate bobbuilderbuildpluginarchiveArchiveFilePrivate;

#define BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_TYPE_DEBIAN_ARCHIVE_BUILDER (bob_builder_build_plugin_archive_debian_archive_builder_get_type ())
#define BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_DEBIAN_ARCHIVE_BUILDER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_TYPE_DEBIAN_ARCHIVE_BUILDER, bobbuilderbuildpluginarchiveDebianArchiveBuilder))
#define BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_DEBIAN_ARCHIVE_BUILDER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_TYPE_DEBIAN_ARCHIVE_BUILDER, bobbuilderbuildpluginarchiveDebianArchiveBuilderClass))
#define BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_IS_DEBIAN_ARCHIVE_BUILDER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_TYPE_DEBIAN_ARCHIVE_BUILDER))
#define BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_IS_DEBIAN_ARCHIVE_BUILDER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_TYPE_DEBIAN_ARCHIVE_BUILDER))
#define BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_DEBIAN_ARCHIVE_BUILDER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BOB_BUILDER_BUILD_PLUGIN_ARCHIVE_TYPE_DEBIAN_ARCHIVE_BUILDER, bobbuilderbuildpluginarchiveDebianArchiveBuilderClass))

typedef struct _bobbuilderbuildpluginarchiveDebianArchiveBuilder bobbuilderbuildpluginarchiveDebianArchiveBuilder;
typedef struct _bobbuilderbuildpluginarchiveDebianArchiveBuilderClass bobbuilderbuildpluginarchiveDebianArchiveBuilderClass;
typedef struct _bobbuilderbuildpluginarchiveDebianArchiveBuilderPrivate bobbuilderbuildpluginarchiveDebianArchiveBuilderPrivate;

typedef enum  {
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_ARCHITECTURE_ENUM_ANY,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_ARCHITECTURE_ENUM_ALL,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_ARCHITECTURE_ENUM_ALPHA,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_ARCHITECTURE_ENUM_AMD64,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_ARCHITECTURE_ENUM_ARM64,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_ARCHITECTURE_ENUM_ARMEL,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_ARCHITECTURE_ENUM_ARMHF,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_ARCHITECTURE_ENUM_HPPA,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_ARCHITECTURE_ENUM_HURD_I386,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_ARCHITECTURE_ENUM_I386,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_ARCHITECTURE_ENUM_KFREEBSD_AMD64,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_ARCHITECTURE_ENUM_KFREEBSD_I386,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_ARCHITECTURE_ENUM_M68K,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_ARCHITECTURE_ENUM_MIPS,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_ARCHITECTURE_ENUM_MIPSEL,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_ARCHITECTURE_ENUM_POWERPC,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_ARCHITECTURE_ENUM_POWERPCSPE,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_ARCHITECTURE_ENUM_PPC64,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_ARCHITECTURE_ENUM_PPC64EL,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_ARCHITECTURE_ENUM_S390X,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_ARCHITECTURE_ENUM_SH4,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_ARCHITECTURE_ENUM_SPARC,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_ARCHITECTURE_ENUM_SPARC64,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_ARCHITECTURE_ENUM_X32
} bobbuilderbuildplugincontrolControlFileArchitectureEnum;

typedef enum  {
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_UNKNOWN,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_ADMIN,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_CLI_MONO,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_COMM,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_DATABASE,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_DEBIAN_INSTALLER,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_DEBUG,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_DEVEL,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_DOC,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_EDITORS,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_ELECTRONICS,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_EMBEDDED,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_FONTS,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_GAMES,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_GNOME,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_GNU_R,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_GNUSTEP,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_GRAPHICS,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_HAMRADIO,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_HASKELL,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_HTTPD,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_INTERPRETERS,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_JAVA,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_KDE,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_KERNEL,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_LIBDEVEL,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_LIBS,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_LISP,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_LOCALIZATION,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_MAIL,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_MATH,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_MISC,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_NET,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_NEWS,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_OCAML,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_OLDLIBS,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_OTHEROSFS,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_PERL,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_PHP,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_PYTHON,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_RUBY,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_SCIENCE,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_SHELLS,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_SOUND,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_TEX,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_TEXT,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_TRANSLATIONS,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_UTILS,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_VCS,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_VIDEO,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_VIRTUAL,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_WEB,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_X11,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_XFCE,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_SECTION_ENUM_ZOPE
} bobbuilderbuildplugincontrolControlFileSectionEnum;

struct _bobbuilderbuildplugincontrolControlFileBuilder {
	GTypeInstance parent_instance;
	volatile int ref_count;
	bobbuilderbuildplugincontrolControlFileBuilderPrivate * priv;
};

struct _bobbuilderbuildplugincontrolControlFileBuilderClass {
	GTypeClass parent_class;
	void (*finalize) (bobbuilderbuildplugincontrolControlFileBuilder *self);
};

struct _bobbuilderbuildplugincontrolControlFileProperties {
	GTypeInstance parent_instance;
	volatile int ref_count;
	bobbuilderbuildplugincontrolControlFilePropertiesPrivate * priv;
};

struct _bobbuilderbuildplugincontrolControlFilePropertiesClass {
	GTypeClass parent_class;
	void (*finalize) (bobbuilderbuildplugincontrolControlFileProperties *self);
};

typedef enum  {
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_PRIORITY_ENUM_OPTIONAL,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_PRIORITY_ENUM_REQUIRED,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_PRIORITY_ENUM_IMPORTANT,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_PRIORITY_ENUM_STANDARD,
	BOB_BUILDER_BUILD_PLUGIN_CONTROL_CONTROL_FILE_PRIORITY_ENUM_EXTRA
} bobbuilderbuildplugincontrolControlFilePriorityEnum;

struct _bobbuilderbuildplugincontrolControlFileDebianPackage {
	GTypeInstance parent_instance;
	volatile int ref_count;
	bobbuilderbuildplugincontrolControlFileDebianPackagePrivate * priv;
};

struct _bobbuilderbuildplugincontrolControlFileDebianPackageClass {
	GTypeClass parent_class;
	void (*finalize) (bobbuilderbuildplugincontrolControlFileDebianPackage *self);
};

struct _bobbuilderbuildplugincontrolControlFileGenerator {
	GTypeInstance parent_instance;
	volatile int ref_count;
	bobbuilderbuildplugincontrolControlFileGeneratorPrivate * priv;
};

struct _bobbuilderbuildplugincontrolControlFileGeneratorClass {
	GTypeClass parent_class;
	void (*finalize) (bobbuilderbuildplugincontrolControlFileGenerator *self);
};

typedef enum  {
	BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_DEPENDENCY_RESOLVER_ERROR_INITIALIZATION_ERROR
} bobbuilderbuildplugindependencyDependencyResolverError;
#define BOB_BUILDER_BUILD_PLUGIN_DEPENDENCY_DEPENDENCY_RESOLVER_ERROR bob_builder_build_plugin_dependency_dependency_resolver_error_quark ()
struct _bobbuilderbuildpluginpropertiesAbstractPropertyPrinter {
	GTypeInstance parent_instance;
	volatile int ref_count;
	bobbuilderbuildpluginpropertiesAbstractPropertyPrinterPrivate * priv;
};

struct _bobbuilderbuildpluginpropertiesAbstractPropertyPrinterClass {
	GTypeClass parent_class;
	void (*finalize) (bobbuilderbuildpluginpropertiesAbstractPropertyPrinter *self);
	gchar* (*formatProperty) (bobbuilderbuildpluginpropertiesAbstractPropertyPrinter* self, const gchar* name, const gchar* value);
};

struct _bobbuilderbuildplugincontrolControlFilePropertyPrinter {
	bobbuilderbuildpluginpropertiesAbstractPropertyPrinter parent_instance;
	bobbuilderbuildplugincontrolControlFilePropertyPrinterPrivate * priv;
};

struct _bobbuilderbuildplugincontrolControlFilePropertyPrinterClass {
	bobbuilderbuildpluginpropertiesAbstractPropertyPrinterClass parent_class;
};

struct _bobbuilderbuildpluginTemporaryDebianArchiveDirectoryStructure {
	GTypeInstance parent_instance;
	volatile int ref_count;
	bobbuilderbuildpluginTemporaryDebianArchiveDirectoryStructurePrivate * priv;
};

struct _bobbuilderbuildpluginTemporaryDebianArchiveDirectoryStructureClass {
	GTypeClass parent_class;
	void (*finalize) (bobbuilderbuildpluginTemporaryDebianArchiveDirectoryStructure *self);
};

struct _bobbuilderbuildpluginBuildDebianPackagePlugin {
	bobbuilderbuildpluginAbstractBobBuildPlugin parent_instance;
	bobbuilderbuildpluginBuildDebianPackagePluginPrivate * priv;
};

struct _bobbuilderbuildpluginBuildDebianPackagePluginClass {
	bobbuilderbuildpluginAbstractBobBuildPluginClass parent_class;
};

struct _bobbuilderbuildpluginWorkingDirectoryStructure {
	GTypeInstance parent_instance;
	volatile int ref_count;
	bobbuilderbuildpluginWorkingDirectoryStructurePrivate * priv;
};

struct _bobbuilderbuildpluginWorkingDirectoryStructureClass {
	GTypeClass parent_class;
	void (*finalize) (bobbuilderbuildpluginWorkingDirectoryStructure *self);
};

struct _bobbuilderbuildplugindependencyDebianPackageDepedencyResolver {
	GTypeInstance parent_instance;
	volatile int ref_count;
	bobbuilderbuildplugindependencyDebianPackageDepedencyResolverPrivate * priv;
};

struct _bobbuilderbuildplugindependencyDebianPackageDepedencyResolverClass {
	GTypeClass parent_class;
	void (*finalize) (bobbuilderbuildplugindependencyDebianPackageDepedencyResolver *self);
};

struct _bobbuilderbuildplugindependencyVapiFileCodeVisitor {
	ValaCodeVisitor parent_instance;
	bobbuilderbuildplugindependencyVapiFileCodeVisitorPrivate * priv;
};

struct _bobbuilderbuildplugindependencyVapiFileCodeVisitorClass {
	ValaCodeVisitorClass parent_class;
};

typedef void (*bobbuilderbuildplugindependencyVapiFileCodeVisitorPackageFileDelegate) (const gchar* packageFile, void* user_data);
struct _bobbuilderbuildplugindependencyAptFilePackageResolver {
	GTypeInstance parent_instance;
	volatile int ref_count;
	bobbuilderbuildplugindependencyAptFilePackageResolverPrivate * priv;
};

struct _bobbuilderbuildplugindependencyAptFilePackageResolverClass {
	GTypeClass parent_class;
	void (*finalize) (bobbuilderbuildplugindependencyAptFilePackageResolver *self);
};

typedef void (*bobbuilderbuildplugindependencyAptFilePackageResolverAptFilePackageResolvedDelegate) (const gchar* resolvedPackage, void* user_data);
struct _bobbuilderbuildplugindependencyCHeader {
	GObject parent_instance;
	bobbuilderbuildplugindependencyCHeaderPrivate * priv;
};

struct _bobbuilderbuildplugindependencyCHeaderClass {
	GObjectClass parent_class;
};

struct _bobbuilderbuildplugindependencyDpkgPackageResolver {
	GTypeInstance parent_instance;
	volatile int ref_count;
	bobbuilderbuildplugindependencyDpkgPackageResolverPrivate * priv;
};

struct _bobbuilderbuildplugindependencyDpkgPackageResolverClass {
	GTypeClass parent_class;
	void (*finalize) (bobbuilderbuildplugindependencyDpkgPackageResolver *self);
};

typedef void (*bobbuilderbuildplugindependencyDpkgPackageResolverDpkgPackageResolvedDelegate) (const gchar* resolvedPackage, void* user_data);
typedef enum  {
	BOB_BUILDER_BUILD_PLUGIN_EXECUTE_EXECUTABLE_RUNNER_ERROR_EXECUTABLE_ERROR
} bobbuilderbuildpluginexecuteExecutableRunnerError;
#define BOB_BUILDER_BUILD_PLUGIN_EXECUTE_EXECUTABLE_RUNNER_ERROR bob_builder_build_plugin_execute_executable_runner_error_quark ()
struct _bobbuilderbuildpluginexecuteExecutableRunner {
	GTypeInstance parent_instance;
	volatile int ref_count;
	bobbuilderbuildpluginexecuteExecutableRunnerPrivate * priv;
};

struct _bobbuilderbuildpluginexecuteExecutableRunnerClass {
	GTypeClass parent_class;
	void (*finalize) (bobbuilderbuildpluginexecuteExecutableRunner *self);
};

struct _bobbuilderbuildpluginexecuteWhichChecker {
	GTypeInstance parent_instance;
	volatile int ref_count;
	bobbuilderbuildpluginexecuteWhichCheckerPrivate * priv;
};

struct _bobbuilderbuildpluginexecuteWhichCheckerClass {
	GTypeClass parent_class;
	void (*finalize) (bobbuilderbuildpluginexecuteWhichChecker *self);
};

typedef enum  {
	BOB_BUILDER_BUILD_PLUGIN_EXECUTE_PIPED_EXECUTABLE_RUNNER_ERROR_EXECUTABLE_ERROR
} bobbuilderbuildpluginexecutePipedExecutableRunnerError;
#define BOB_BUILDER_BUILD_PLUGIN_EXECUTE_PIPED_EXECUTABLE_RUNNER_ERROR bob_builder_build_plugin_execute_piped_executable_runner_error_quark ()
struct _bobbuilderbuildpluginexecutePipedExecutableRunner {
	GTypeInstance parent_instance;
	volatile int ref_count;
	bobbuilderbuildpluginexecutePipedExecutableRunnerPrivate * priv;
};

struct _bobbuilderbuildpluginexecutePipedExecutableRunnerClass {
	GTypeClass parent_class;
	void (*finalize) (bobbuilderbuildpluginexecutePipedExecutableRunner *self);
};

typedef void (*bobbuilderbuildpluginexecutePipedExecutableRunnerPipedExecutableFinishedDelegate) (bobbuilderbuildpluginexecutePipedExecutableOutput* output, void* user_data);
struct _bobbuilderbuildpluginexecutePipedExecutableOutput {
	GTypeInstance parent_instance;
	volatile int ref_count;
	bobbuilderbuildpluginexecutePipedExecutableOutputPrivate * priv;
};

struct _bobbuilderbuildpluginexecutePipedExecutableOutputClass {
	GTypeClass parent_class;
	void (*finalize) (bobbuilderbuildpluginexecutePipedExecutableOutput *self);
};

struct _bobbuilderbuildpluginpropertiesProperties {
	GTypeInstance parent_instance;
	volatile int ref_count;
	bobbuilderbuildpluginpropertiesPropertiesPrivate * priv;
};

struct _bobbuilderbuildpluginpropertiesPropertiesClass {
	GTypeClass parent_class;
	void (*finalize) (bobbuilderbuildpluginpropertiesProperties *self);
};

typedef void (*bobbuilderbuildpluginpropertiesPropertiesForEachPropertyDelegate) (const gchar* name, const gchar* value, void* user_data);
struct _bobbuilderbuildpluginpropertiesPropertiesFileWriter {
	GTypeInstance parent_instance;
	volatile int ref_count;
	bobbuilderbuildpluginpropertiesPropertiesFileWriterPrivate * priv;
};

struct _bobbuilderbuildpluginpropertiesPropertiesFileWriterClass {
	GTypeClass parent_class;
	void (*finalize) (bobbuilderbuildpluginpropertiesPropertiesFileWriter *self);
};

struct _bobbuilderbuildpluginarchiveDebianArchiveCreator {
	GTypeInstance parent_instance;
	volatile int ref_count;
	bobbuilderbuildpluginarchiveDebianArchiveCreatorPrivate * priv;
};

struct _bobbuilderbuildpluginarchiveDebianArchiveCreatorClass {
	GTypeClass parent_class;
	void (*finalize) (bobbuilderbuildpluginarchiveDebianArchiveCreator *self);
};

struct _bobbuilderbuildpluginarchiveArchiveCreator {
	GTypeInstance parent_instance;
	volatile int ref_count;
	bobbuilderbuildpluginarchiveArchiveCreatorPrivate * priv;
};

struct _bobbuilderbuildpluginarchiveArchiveCreatorClass {
	GTypeClass parent_class;
	void (*finalize) (bobbuilderbuildpluginarchiveArchiveCreator *self);
};

struct _bobbuilderbuildpluginarchiveArchiveFile {
	GObject parent_instance;
	bobbuilderbuildpluginarchiveArchiveFilePrivate * priv;
};

struct _bobbuilderbuildpluginarchiveArchiveFileClass {
	GObjectClass parent_class;
};

struct _bobbuilderbuildpluginarchiveDebianArchiveBuilder {
	GTypeInstance parent_instance;
	volatile int ref_count;
	bobbuilderbuildpluginarchiveDebianArchiveBuilderPrivate * priv;
};

struct _bobbuilderbuildpluginarchiveDebianArchiveBuilderClass {
	GTypeClass parent_class;
	void (*finalize) (bobbuilderbuildpluginarchiveDebianArchiveBuilder *self);
};


GType bob_builder_build_plugin_control_control_file_architecture_enum_get_type (void) G_GNUC_CONST;
gchar* bob_builder_build_plugin_control_control_file_architecture_enum_name (bobbuilderbuildplugincontrolControlFileArchitectureEnum self);
bobbuilderbuildplugincontrolControlFileArchitectureEnum bob_builder_build_plugin_control_control_file_architecture_enum_fromName (const gchar* name, bobbuilderbuildplugincontrolControlFileArchitectureEnum defaultIfNull);
GType bob_builder_build_plugin_control_control_file_section_enum_get_type (void) G_GNUC_CONST;
gchar* bob_builder_build_plugin_control_control_file_section_enum_name (bobbuilderbuildplugincontrolControlFileSectionEnum self);
bobbuilderbuildplugincontrolControlFileSectionEnum bob_builder_build_plugin_control_control_file_section_enum_fromName (const gchar* name, bobbuilderbuildplugincontrolControlFileSectionEnum defaultIfNull);
gpointer bob_builder_build_plugin_control_control_file_builder_ref (gpointer instance);
void bob_builder_build_plugin_control_control_file_builder_unref (gpointer instance);
GParamSpec* bob_builder_build_plugin_control_param_spec_control_file_builder (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void bob_builder_build_plugin_control_value_set_control_file_builder (GValue* value, gpointer v_object);
void bob_builder_build_plugin_control_value_take_control_file_builder (GValue* value, gpointer v_object);
gpointer bob_builder_build_plugin_control_value_get_control_file_builder (const GValue* value);
GType bob_builder_build_plugin_control_control_file_builder_get_type (void) G_GNUC_CONST;
bobbuilderbuildplugincontrolControlFileBuilder* bob_builder_build_plugin_control_control_file_builder_controlFile (void);
bobbuilderbuildplugincontrolControlFileBuilder* bob_builder_build_plugin_control_control_file_builder_package (bobbuilderbuildplugincontrolControlFileBuilder* self, const gchar* package);
bobbuilderbuildplugincontrolControlFileBuilder* bob_builder_build_plugin_control_control_file_builder_version (bobbuilderbuildplugincontrolControlFileBuilder* self, const gchar* version);
bobbuilderbuildplugincontrolControlFileBuilder* bob_builder_build_plugin_control_control_file_builder_section (bobbuilderbuildplugincontrolControlFileBuilder* self, const gchar* section);
bobbuilderbuildplugincontrolControlFileBuilder* bob_builder_build_plugin_control_control_file_builder_optionalPriority (bobbuilderbuildplugincontrolControlFileBuilder* self);
bobbuilderbuildplugincontrolControlFileBuilder* bob_builder_build_plugin_control_control_file_builder_architecture (bobbuilderbuildplugincontrolControlFileBuilder* self, const gchar* architecture);
bobbuilderbuildplugincontrolControlFileBuilder* bob_builder_build_plugin_control_control_file_builder_description (bobbuilderbuildplugincontrolControlFileBuilder* self, const gchar* description);
gpointer bob_builder_build_plugin_control_control_file_debian_package_ref (gpointer instance);
void bob_builder_build_plugin_control_control_file_debian_package_unref (gpointer instance);
GParamSpec* bob_builder_build_plugin_control_param_spec_control_file_debian_package (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void bob_builder_build_plugin_control_value_set_control_file_debian_package (GValue* value, gpointer v_object);
void bob_builder_build_plugin_control_value_take_control_file_debian_package (GValue* value, gpointer v_object);
gpointer bob_builder_build_plugin_control_value_get_control_file_debian_package (const GValue* value);
GType bob_builder_build_plugin_control_control_file_debian_package_get_type (void) G_GNUC_CONST;
bobbuilderbuildplugincontrolControlFileBuilder* bob_builder_build_plugin_control_control_file_builder_depends (bobbuilderbuildplugincontrolControlFileBuilder* self, bobbuilderbuildplugincontrolControlFileDebianPackage* dependsPackage);
bobbuilderbuildplugincontrolControlFileBuilder* bob_builder_build_plugin_control_control_file_builder_author (bobbuilderbuildplugincontrolControlFileBuilder* self, const gchar* author);
void bob_builder_build_plugin_control_control_file_builder_build (bobbuilderbuildplugincontrolControlFileBuilder* self, bobbuilderfilesystemFileObject* outputControlFile, GError** error);
gpointer bob_builder_build_plugin_control_control_file_properties_ref (gpointer instance);
void bob_builder_build_plugin_control_control_file_properties_unref (gpointer instance);
GParamSpec* bob_builder_build_plugin_control_param_spec_control_file_properties (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void bob_builder_build_plugin_control_value_set_control_file_properties (GValue* value, gpointer v_object);
void bob_builder_build_plugin_control_value_take_control_file_properties (GValue* value, gpointer v_object);
gpointer bob_builder_build_plugin_control_value_get_control_file_properties (const GValue* value);
GType bob_builder_build_plugin_control_control_file_properties_get_type (void) G_GNUC_CONST;
void bob_builder_build_plugin_control_control_file_properties_setPackage (bobbuilderbuildplugincontrolControlFileProperties* self, const gchar* package);
void bob_builder_build_plugin_control_control_file_properties_setVersion (bobbuilderbuildplugincontrolControlFileProperties* self, const gchar* version);
void bob_builder_build_plugin_control_control_file_properties_setSection (bobbuilderbuildplugincontrolControlFileProperties* self, bobbuilderbuildplugincontrolControlFileSectionEnum section);
GType bob_builder_build_plugin_control_control_file_priority_enum_get_type (void) G_GNUC_CONST;
void bob_builder_build_plugin_control_control_file_properties_setPriority (bobbuilderbuildplugincontrolControlFileProperties* self, bobbuilderbuildplugincontrolControlFilePriorityEnum priority);
void bob_builder_build_plugin_control_control_file_properties_setArchitecture (bobbuilderbuildplugincontrolControlFileProperties* self, bobbuilderbuildplugincontrolControlFileArchitectureEnum architecture);
void bob_builder_build_plugin_control_control_file_properties_setDescription (bobbuilderbuildplugincontrolControlFileProperties* self, const gchar* description);
void bob_builder_build_plugin_control_control_file_properties_addDependency (bobbuilderbuildplugincontrolControlFileProperties* self, bobbuilderbuildplugincontrolControlFileDebianPackage* dependency);
void bob_builder_build_plugin_control_control_file_properties_addAuthor (bobbuilderbuildplugincontrolControlFileProperties* self, const gchar* author);
void bob_builder_build_plugin_control_control_file_properties_writeToFile (bobbuilderbuildplugincontrolControlFileProperties* self, bobbuilderfilesystemFileObject* outputFile, GError** error);
bobbuilderbuildplugincontrolControlFileProperties* bob_builder_build_plugin_control_control_file_properties_new (void);
bobbuilderbuildplugincontrolControlFileProperties* bob_builder_build_plugin_control_control_file_properties_construct (GType object_type);
gchar* bob_builder_build_plugin_control_control_file_priority_enum_name (bobbuilderbuildplugincontrolControlFilePriorityEnum self);
bobbuilderbuildplugincontrolControlFilePriorityEnum* bob_builder_build_plugin_control_control_file_priority_enum_fromName (const gchar* name);
bobbuilderbuildplugincontrolControlFileDebianPackage* bob_builder_build_plugin_control_control_file_debian_package_new_withName (const gchar* packageName);
bobbuilderbuildplugincontrolControlFileDebianPackage* bob_builder_build_plugin_control_control_file_debian_package_construct_withName (GType object_type, const gchar* packageName);
gchar* bob_builder_build_plugin_control_control_file_debian_package_to_string (bobbuilderbuildplugincontrolControlFileDebianPackage* self);
bobbuilderbuildplugincontrolControlFileDebianPackage* bob_builder_build_plugin_control_control_file_debian_package_new (void);
bobbuilderbuildplugincontrolControlFileDebianPackage* bob_builder_build_plugin_control_control_file_debian_package_construct (GType object_type);
const gchar* bob_builder_build_plugin_control_control_file_debian_package_get_name (bobbuilderbuildplugincontrolControlFileDebianPackage* self);
void bob_builder_build_plugin_control_control_file_debian_package_set_name (bobbuilderbuildplugincontrolControlFileDebianPackage* self, const gchar* value);
gpointer bob_builder_build_plugin_control_control_file_generator_ref (gpointer instance);
void bob_builder_build_plugin_control_control_file_generator_unref (gpointer instance);
GParamSpec* bob_builder_build_plugin_control_param_spec_control_file_generator (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void bob_builder_build_plugin_control_value_set_control_file_generator (GValue* value, gpointer v_object);
void bob_builder_build_plugin_control_value_take_control_file_generator (GValue* value, gpointer v_object);
gpointer bob_builder_build_plugin_control_value_get_control_file_generator (const GValue* value);
GType bob_builder_build_plugin_control_control_file_generator_get_type (void) G_GNUC_CONST;
GQuark bob_builder_build_plugin_dependency_dependency_resolver_error_quark (void);
void bob_builder_build_plugin_control_control_file_generator_initialize (bobbuilderbuildplugincontrolControlFileGenerator* self, GError** error);
void bob_builder_build_plugin_control_control_file_generator_generate (bobbuilderbuildplugincontrolControlFileGenerator* self, bobbuilderrecipeprojectBobBuildProjectRecipe* projectRecipe, bobbuilderfilesystemFileObject* controlFile, GError** error);
bobbuilderbuildplugincontrolControlFileGenerator* bob_builder_build_plugin_control_control_file_generator_new (void);
bobbuilderbuildplugincontrolControlFileGenerator* bob_builder_build_plugin_control_control_file_generator_construct (GType object_type);
gpointer bob_builder_build_plugin_properties_abstract_property_printer_ref (gpointer instance);
void bob_builder_build_plugin_properties_abstract_property_printer_unref (gpointer instance);
GParamSpec* bob_builder_build_plugin_properties_param_spec_abstract_property_printer (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void bob_builder_build_plugin_properties_value_set_abstract_property_printer (GValue* value, gpointer v_object);
void bob_builder_build_plugin_properties_value_take_abstract_property_printer (GValue* value, gpointer v_object);
gpointer bob_builder_build_plugin_properties_value_get_abstract_property_printer (const GValue* value);
GType bob_builder_build_plugin_properties_abstract_property_printer_get_type (void) G_GNUC_CONST;
GType bob_builder_build_plugin_control_control_file_property_printer_get_type (void) G_GNUC_CONST;
bobbuilderbuildplugincontrolControlFilePropertyPrinter* bob_builder_build_plugin_control_control_file_property_printer_new (void);
bobbuilderbuildplugincontrolControlFilePropertyPrinter* bob_builder_build_plugin_control_control_file_property_printer_construct (GType object_type);
void initializePlugin (bobbuilderbuildpluginBobBuildPluginLoader* pluginLoader);
gchar** getDependencies (int* result_length1);
gpointer bob_builder_build_plugin_temporary_debian_archive_directory_structure_ref (gpointer instance);
void bob_builder_build_plugin_temporary_debian_archive_directory_structure_unref (gpointer instance);
GParamSpec* bob_builder_build_plugin_param_spec_temporary_debian_archive_directory_structure (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void bob_builder_build_plugin_value_set_temporary_debian_archive_directory_structure (GValue* value, gpointer v_object);
void bob_builder_build_plugin_value_take_temporary_debian_archive_directory_structure (GValue* value, gpointer v_object);
gpointer bob_builder_build_plugin_value_get_temporary_debian_archive_directory_structure (const GValue* value);
GType bob_builder_build_plugin_temporary_debian_archive_directory_structure_get_type (void) G_GNUC_CONST;
void bob_builder_build_plugin_temporary_debian_archive_directory_structure_debianDirectory (const gchar* directoryName, bobbuilderfilesystemDirectoryBuilderDirectoryBuilderDelegate directoryDelegate, void* directoryDelegate_target);
bobbuilderbuildpluginTemporaryDebianArchiveDirectoryStructure* bob_builder_build_plugin_temporary_debian_archive_directory_structure_new (void);
bobbuilderbuildpluginTemporaryDebianArchiveDirectoryStructure* bob_builder_build_plugin_temporary_debian_archive_directory_structure_construct (GType object_type);
GType bob_builder_build_plugin_build_debian_package_plugin_get_type (void) G_GNUC_CONST;
bobbuilderbuildpluginBuildDebianPackagePlugin* bob_builder_build_plugin_build_debian_package_plugin_new (void);
bobbuilderbuildpluginBuildDebianPackagePlugin* bob_builder_build_plugin_build_debian_package_plugin_construct (GType object_type);
gpointer bob_builder_build_plugin_working_directory_structure_ref (gpointer instance);
void bob_builder_build_plugin_working_directory_structure_unref (gpointer instance);
GParamSpec* bob_builder_build_plugin_param_spec_working_directory_structure (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void bob_builder_build_plugin_value_set_working_directory_structure (GValue* value, gpointer v_object);
void bob_builder_build_plugin_value_take_working_directory_structure (GValue* value, gpointer v_object);
gpointer bob_builder_build_plugin_value_get_working_directory_structure (const GValue* value);
GType bob_builder_build_plugin_working_directory_structure_get_type (void) G_GNUC_CONST;
bobbuilderbuildpluginWorkingDirectoryStructure* bob_builder_build_plugin_working_directory_structure_read (void);
bobbuilderbuildpluginWorkingDirectoryStructure* bob_builder_build_plugin_working_directory_structure_target (bobbuilderbuildpluginWorkingDirectoryStructure* self, bobbuilderfilesystemDirectoryBuilderDirectoryBuilderDelegate directoryDelegate, void* directoryDelegate_target);
bobbuilderbuildpluginWorkingDirectoryStructure* bob_builder_build_plugin_working_directory_structure_source (bobbuilderbuildpluginWorkingDirectoryStructure* self, bobbuilderfilesystemDirectoryBuilderDirectoryBuilderDelegate directoryDelegate, void* directoryDelegate_target);
bobbuilderbuildpluginWorkingDirectoryStructure* bob_builder_build_plugin_working_directory_structure_new (void);
bobbuilderbuildpluginWorkingDirectoryStructure* bob_builder_build_plugin_working_directory_structure_construct (GType object_type);
gpointer bob_builder_build_plugin_dependency_debian_package_depedency_resolver_ref (gpointer instance);
void bob_builder_build_plugin_dependency_debian_package_depedency_resolver_unref (gpointer instance);
GParamSpec* bob_builder_build_plugin_dependency_param_spec_debian_package_depedency_resolver (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void bob_builder_build_plugin_dependency_value_set_debian_package_depedency_resolver (GValue* value, gpointer v_object);
void bob_builder_build_plugin_dependency_value_take_debian_package_depedency_resolver (GValue* value, gpointer v_object);
gpointer bob_builder_build_plugin_dependency_value_get_debian_package_depedency_resolver (const GValue* value);
GType bob_builder_build_plugin_dependency_debian_package_depedency_resolver_get_type (void) G_GNUC_CONST;
void bob_builder_build_plugin_dependency_debian_package_depedency_resolver_initialize (bobbuilderbuildplugindependencyDebianPackageDepedencyResolver* self, GError** error);
gchar** bob_builder_build_plugin_dependency_debian_package_depedency_resolver_resolveDebianPackages (bobbuilderbuildplugindependencyDebianPackageDepedencyResolver* self, bobbuilderrecipeprojectBobBuildProjectDependency* dependency, int* result_length1);
bobbuilderbuildplugindependencyDebianPackageDepedencyResolver* bob_builder_build_plugin_dependency_debian_package_depedency_resolver_new (void);
bobbuilderbuildplugindependencyDebianPackageDepedencyResolver* bob_builder_build_plugin_dependency_debian_package_depedency_resolver_construct (GType object_type);
GType bob_builder_build_plugin_dependency_vapi_file_code_visitor_get_type (void) G_GNUC_CONST;
void bob_builder_build_plugin_dependency_vapi_file_code_visitor_forEachCHeader (bobbuilderbuildplugindependencyVapiFileCodeVisitor* self, bobbuilderbuildplugindependencyVapiFileCodeVisitorPackageFileDelegate packageFileDelegate, void* packageFileDelegate_target);
void bob_builder_build_plugin_dependency_vapi_file_code_visitor_forEachVapiFile (bobbuilderbuildplugindependencyVapiFileCodeVisitor* self, bobbuilderbuildplugindependencyVapiFileCodeVisitorPackageFileDelegate packageFileDelegate, void* packageFileDelegate_target);
bobbuilderbuildplugindependencyVapiFileCodeVisitor* bob_builder_build_plugin_dependency_vapi_file_code_visitor_new (void);
bobbuilderbuildplugindependencyVapiFileCodeVisitor* bob_builder_build_plugin_dependency_vapi_file_code_visitor_construct (GType object_type);
gpointer bob_builder_build_plugin_dependency_apt_file_package_resolver_ref (gpointer instance);
void bob_builder_build_plugin_dependency_apt_file_package_resolver_unref (gpointer instance);
GParamSpec* bob_builder_build_plugin_dependency_param_spec_apt_file_package_resolver (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void bob_builder_build_plugin_dependency_value_set_apt_file_package_resolver (GValue* value, gpointer v_object);
void bob_builder_build_plugin_dependency_value_take_apt_file_package_resolver (GValue* value, gpointer v_object);
gpointer bob_builder_build_plugin_dependency_value_get_apt_file_package_resolver (const GValue* value);
GType bob_builder_build_plugin_dependency_apt_file_package_resolver_get_type (void) G_GNUC_CONST;
void bob_builder_build_plugin_dependency_apt_file_package_resolver_initialize (bobbuilderbuildplugindependencyAptFilePackageResolver* self, GError** error);
void bob_builder_build_plugin_dependency_apt_file_package_resolver_resolveFilePackages (bobbuilderbuildplugindependencyAptFilePackageResolver* self, const gchar* file);
gboolean bob_builder_build_plugin_dependency_apt_file_package_resolver_anyFound (bobbuilderbuildplugindependencyAptFilePackageResolver* self);
void bob_builder_build_plugin_dependency_apt_file_package_resolver_forEachResolved (bobbuilderbuildplugindependencyAptFilePackageResolver* self, bobbuilderbuildplugindependencyAptFilePackageResolverAptFilePackageResolvedDelegate resolvedDelegate, void* resolvedDelegate_target);
bobbuilderbuildplugindependencyAptFilePackageResolver* bob_builder_build_plugin_dependency_apt_file_package_resolver_new (void);
bobbuilderbuildplugindependencyAptFilePackageResolver* bob_builder_build_plugin_dependency_apt_file_package_resolver_construct (GType object_type);
GType bob_builder_build_plugin_dependency_cheader_get_type (void) G_GNUC_CONST;
bobbuilderbuildplugindependencyCHeader* bob_builder_build_plugin_dependency_cheader_new (const gchar* path, const gchar* girVersion);
bobbuilderbuildplugindependencyCHeader* bob_builder_build_plugin_dependency_cheader_construct (GType object_type, const gchar* path, const gchar* girVersion);
gchar* bob_builder_build_plugin_dependency_cheader_getVersionedFileName (bobbuilderbuildplugindependencyCHeader* self);
const gchar* bob_builder_build_plugin_dependency_cheader_get_path (bobbuilderbuildplugindependencyCHeader* self);
void bob_builder_build_plugin_dependency_cheader_set_path (bobbuilderbuildplugindependencyCHeader* self, const gchar* value);
const gchar* bob_builder_build_plugin_dependency_cheader_get_girVersion (bobbuilderbuildplugindependencyCHeader* self);
void bob_builder_build_plugin_dependency_cheader_set_girVersion (bobbuilderbuildplugindependencyCHeader* self, const gchar* value);
gpointer bob_builder_build_plugin_dependency_dpkg_package_resolver_ref (gpointer instance);
void bob_builder_build_plugin_dependency_dpkg_package_resolver_unref (gpointer instance);
GParamSpec* bob_builder_build_plugin_dependency_param_spec_dpkg_package_resolver (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void bob_builder_build_plugin_dependency_value_set_dpkg_package_resolver (GValue* value, gpointer v_object);
void bob_builder_build_plugin_dependency_value_take_dpkg_package_resolver (GValue* value, gpointer v_object);
gpointer bob_builder_build_plugin_dependency_value_get_dpkg_package_resolver (const GValue* value);
GType bob_builder_build_plugin_dependency_dpkg_package_resolver_get_type (void) G_GNUC_CONST;
void bob_builder_build_plugin_dependency_dpkg_package_resolver_initialize (bobbuilderbuildplugindependencyDpkgPackageResolver* self, GError** error);
void bob_builder_build_plugin_dependency_dpkg_package_resolver_resolveFilePackages (bobbuilderbuildplugindependencyDpkgPackageResolver* self, const gchar* file);
gboolean bob_builder_build_plugin_dependency_dpkg_package_resolver_anyFound (bobbuilderbuildplugindependencyDpkgPackageResolver* self);
void bob_builder_build_plugin_dependency_dpkg_package_resolver_forEachResolved (bobbuilderbuildplugindependencyDpkgPackageResolver* self, bobbuilderbuildplugindependencyDpkgPackageResolverDpkgPackageResolvedDelegate resolvedDelegate, void* resolvedDelegate_target);
bobbuilderbuildplugindependencyDpkgPackageResolver* bob_builder_build_plugin_dependency_dpkg_package_resolver_new (void);
bobbuilderbuildplugindependencyDpkgPackageResolver* bob_builder_build_plugin_dependency_dpkg_package_resolver_construct (GType object_type);
GQuark bob_builder_build_plugin_execute_executable_runner_error_quark (void);
gpointer bob_builder_build_plugin_execute_executable_runner_ref (gpointer instance);
void bob_builder_build_plugin_execute_executable_runner_unref (gpointer instance);
GParamSpec* bob_builder_build_plugin_execute_param_spec_executable_runner (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void bob_builder_build_plugin_execute_value_set_executable_runner (GValue* value, gpointer v_object);
void bob_builder_build_plugin_execute_value_take_executable_runner (GValue* value, gpointer v_object);
gpointer bob_builder_build_plugin_execute_value_get_executable_runner (const GValue* value);
GType bob_builder_build_plugin_execute_executable_runner_get_type (void) G_GNUC_CONST;
bobbuilderbuildpluginexecuteExecutableRunner* bob_builder_build_plugin_execute_executable_runner_new (const gchar* command);
bobbuilderbuildpluginexecuteExecutableRunner* bob_builder_build_plugin_execute_executable_runner_construct (GType object_type, const gchar* command);
gchar* bob_builder_build_plugin_execute_executable_runner_run (bobbuilderbuildpluginexecuteExecutableRunner* self, GError** error);
gpointer bob_builder_build_plugin_execute_which_checker_ref (gpointer instance);
void bob_builder_build_plugin_execute_which_checker_unref (gpointer instance);
GParamSpec* bob_builder_build_plugin_execute_param_spec_which_checker (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void bob_builder_build_plugin_execute_value_set_which_checker (GValue* value, gpointer v_object);
void bob_builder_build_plugin_execute_value_take_which_checker (GValue* value, gpointer v_object);
gpointer bob_builder_build_plugin_execute_value_get_which_checker (const GValue* value);
GType bob_builder_build_plugin_execute_which_checker_get_type (void) G_GNUC_CONST;
bobbuilderbuildpluginexecuteWhichChecker* bob_builder_build_plugin_execute_which_checker_new (const gchar* commandToCheck);
bobbuilderbuildpluginexecuteWhichChecker* bob_builder_build_plugin_execute_which_checker_construct (GType object_type, const gchar* commandToCheck);
gboolean bob_builder_build_plugin_execute_which_checker_success (bobbuilderbuildpluginexecuteWhichChecker* self);
GQuark bob_builder_build_plugin_execute_piped_executable_runner_error_quark (void);
gpointer bob_builder_build_plugin_execute_piped_executable_runner_ref (gpointer instance);
void bob_builder_build_plugin_execute_piped_executable_runner_unref (gpointer instance);
GParamSpec* bob_builder_build_plugin_execute_param_spec_piped_executable_runner (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void bob_builder_build_plugin_execute_value_set_piped_executable_runner (GValue* value, gpointer v_object);
void bob_builder_build_plugin_execute_value_take_piped_executable_runner (GValue* value, gpointer v_object);
gpointer bob_builder_build_plugin_execute_value_get_piped_executable_runner (const GValue* value);
GType bob_builder_build_plugin_execute_piped_executable_runner_get_type (void) G_GNUC_CONST;
bobbuilderbuildpluginexecutePipedExecutableRunner* bob_builder_build_plugin_execute_piped_executable_runner_new (const gchar* argument, ...);
bobbuilderbuildpluginexecutePipedExecutableRunner* bob_builder_build_plugin_execute_piped_executable_runner_construct (GType object_type, const gchar* argument, ...);
bobbuilderbuildpluginexecutePipedExecutableRunner* bob_builder_build_plugin_execute_piped_executable_runner_constructv (GType object_type, const gchar* argument, va_list _vala_va_list);
gpointer bob_builder_build_plugin_execute_piped_executable_output_ref (gpointer instance);
void bob_builder_build_plugin_execute_piped_executable_output_unref (gpointer instance);
GParamSpec* bob_builder_build_plugin_execute_param_spec_piped_executable_output (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void bob_builder_build_plugin_execute_value_set_piped_executable_output (GValue* value, gpointer v_object);
void bob_builder_build_plugin_execute_value_take_piped_executable_output (GValue* value, gpointer v_object);
gpointer bob_builder_build_plugin_execute_value_get_piped_executable_output (const GValue* value);
GType bob_builder_build_plugin_execute_piped_executable_output_get_type (void) G_GNUC_CONST;
void bob_builder_build_plugin_execute_piped_executable_runner_run (bobbuilderbuildpluginexecutePipedExecutableRunner* self, bobbuilderbuildpluginexecutePipedExecutableRunnerPipedExecutableFinishedDelegate finishedDelegate, void* finishedDelegate_target, GError** error);
void bob_builder_build_plugin_execute_piped_executable_runner_runWithInput (bobbuilderbuildpluginexecutePipedExecutableRunner* self, GInputStream* input, bobbuilderbuildpluginexecutePipedExecutableRunnerPipedExecutableFinishedDelegate finishedDelegate, void* finishedDelegate_target, GError** error);
bobbuilderbuildpluginexecutePipedExecutableOutput* bob_builder_build_plugin_execute_piped_executable_output_new_fromStream (GInputStream* stream);
bobbuilderbuildpluginexecutePipedExecutableOutput* bob_builder_build_plugin_execute_piped_executable_output_construct_fromStream (GType object_type, GInputStream* stream);
gchar* bob_builder_build_plugin_execute_piped_executable_output_getText (bobbuilderbuildpluginexecutePipedExecutableOutput* self);
GInputStream* bob_builder_build_plugin_execute_piped_executable_output_getStream (bobbuilderbuildpluginexecutePipedExecutableOutput* self);
bobbuilderbuildpluginexecutePipedExecutableOutput* bob_builder_build_plugin_execute_piped_executable_output_new (void);
bobbuilderbuildpluginexecutePipedExecutableOutput* bob_builder_build_plugin_execute_piped_executable_output_construct (GType object_type);
gpointer bob_builder_build_plugin_properties_properties_ref (gpointer instance);
void bob_builder_build_plugin_properties_properties_unref (gpointer instance);
GParamSpec* bob_builder_build_plugin_properties_param_spec_properties (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void bob_builder_build_plugin_properties_value_set_properties (GValue* value, gpointer v_object);
void bob_builder_build_plugin_properties_value_take_properties (GValue* value, gpointer v_object);
gpointer bob_builder_build_plugin_properties_value_get_properties (const GValue* value);
GType bob_builder_build_plugin_properties_properties_get_type (void) G_GNUC_CONST;
void bob_builder_build_plugin_properties_properties_setProperty (bobbuilderbuildpluginpropertiesProperties* self, const gchar* name, const gchar* value);
gchar* bob_builder_build_plugin_properties_properties_getProperty (bobbuilderbuildpluginpropertiesProperties* self, const gchar* name, const gchar* defaultIfNull);
void bob_builder_build_plugin_properties_properties_forEach (bobbuilderbuildpluginpropertiesProperties* self, bobbuilderbuildpluginpropertiesPropertiesForEachPropertyDelegate propertyDelegate, void* propertyDelegate_target);
void bob_builder_build_plugin_properties_properties_writeToFile (bobbuilderbuildpluginpropertiesProperties* self, bobbuilderfilesystemFileObject* outputFile, bobbuilderbuildpluginpropertiesAbstractPropertyPrinter* propertyPrinter, GError** error);
bobbuilderbuildpluginpropertiesProperties* bob_builder_build_plugin_properties_properties_new (void);
bobbuilderbuildpluginpropertiesProperties* bob_builder_build_plugin_properties_properties_construct (GType object_type);
gsize bob_builder_build_plugin_properties_abstract_property_printer_printProperty (bobbuilderbuildpluginpropertiesAbstractPropertyPrinter* self, GOutputStream* stream, const gchar* name, const gchar* value);
gchar* bob_builder_build_plugin_properties_abstract_property_printer_formatProperty (bobbuilderbuildpluginpropertiesAbstractPropertyPrinter* self, const gchar* name, const gchar* value);
bobbuilderbuildpluginpropertiesAbstractPropertyPrinter* bob_builder_build_plugin_properties_abstract_property_printer_construct (GType object_type);
gpointer bob_builder_build_plugin_properties_properties_file_writer_ref (gpointer instance);
void bob_builder_build_plugin_properties_properties_file_writer_unref (gpointer instance);
GParamSpec* bob_builder_build_plugin_properties_param_spec_properties_file_writer (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void bob_builder_build_plugin_properties_value_set_properties_file_writer (GValue* value, gpointer v_object);
void bob_builder_build_plugin_properties_value_take_properties_file_writer (GValue* value, gpointer v_object);
gpointer bob_builder_build_plugin_properties_value_get_properties_file_writer (const GValue* value);
GType bob_builder_build_plugin_properties_properties_file_writer_get_type (void) G_GNUC_CONST;
bobbuilderbuildpluginpropertiesPropertiesFileWriter* bob_builder_build_plugin_properties_properties_file_writer_new (bobbuilderbuildpluginpropertiesAbstractPropertyPrinter* propertyPrinter);
bobbuilderbuildpluginpropertiesPropertiesFileWriter* bob_builder_build_plugin_properties_properties_file_writer_construct (GType object_type, bobbuilderbuildpluginpropertiesAbstractPropertyPrinter* propertyPrinter);
void bob_builder_build_plugin_properties_properties_file_writer_write (bobbuilderbuildpluginpropertiesPropertiesFileWriter* self, bobbuilderfilesystemFileObject* output, bobbuilderbuildpluginpropertiesProperties* properties, GError** error);
gpointer bob_builder_build_plugin_archive_debian_archive_creator_ref (gpointer instance);
void bob_builder_build_plugin_archive_debian_archive_creator_unref (gpointer instance);
GParamSpec* bob_builder_build_plugin_archive_param_spec_debian_archive_creator (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void bob_builder_build_plugin_archive_value_set_debian_archive_creator (GValue* value, gpointer v_object);
void bob_builder_build_plugin_archive_value_take_debian_archive_creator (GValue* value, gpointer v_object);
gpointer bob_builder_build_plugin_archive_value_get_debian_archive_creator (const GValue* value);
GType bob_builder_build_plugin_archive_debian_archive_creator_get_type (void) G_GNUC_CONST;
bobbuilderbuildpluginarchiveDebianArchiveCreator* bob_builder_build_plugin_archive_debian_archive_creator_new (bobbuilderfilesystemDirectoryObject* relativeDirectory);
bobbuilderbuildpluginarchiveDebianArchiveCreator* bob_builder_build_plugin_archive_debian_archive_creator_construct (GType object_type, bobbuilderfilesystemDirectoryObject* relativeDirectory);
bobbuilderfilesystemFileObject* bob_builder_build_plugin_archive_debian_archive_creator_createDebianArchive (bobbuilderbuildpluginarchiveDebianArchiveCreator* self, const gchar* debianPackageFileName);
bobbuilderfilesystemDirectoryObject* bob_builder_build_plugin_archive_debian_archive_creator_get_debianLibraryDirectory (bobbuilderbuildpluginarchiveDebianArchiveCreator* self);
void bob_builder_build_plugin_archive_debian_archive_creator_set_debianLibraryDirectory (bobbuilderbuildpluginarchiveDebianArchiveCreator* self, bobbuilderfilesystemDirectoryObject* value);
bobbuilderfilesystemDirectoryObject* bob_builder_build_plugin_archive_debian_archive_creator_get_debianBinaryDirectory (bobbuilderbuildpluginarchiveDebianArchiveCreator* self);
void bob_builder_build_plugin_archive_debian_archive_creator_set_debianBinaryDirectory (bobbuilderbuildpluginarchiveDebianArchiveCreator* self, bobbuilderfilesystemDirectoryObject* value);
bobbuilderfilesystemDirectoryObject* bob_builder_build_plugin_archive_debian_archive_creator_get_debianIncludeDirectory (bobbuilderbuildpluginarchiveDebianArchiveCreator* self);
void bob_builder_build_plugin_archive_debian_archive_creator_set_debianIncludeDirectory (bobbuilderbuildpluginarchiveDebianArchiveCreator* self, bobbuilderfilesystemDirectoryObject* value);
bobbuilderfilesystemDirectoryObject* bob_builder_build_plugin_archive_debian_archive_creator_get_debianVapiDirectory (bobbuilderbuildpluginarchiveDebianArchiveCreator* self);
void bob_builder_build_plugin_archive_debian_archive_creator_set_debianVapiDirectory (bobbuilderbuildpluginarchiveDebianArchiveCreator* self, bobbuilderfilesystemDirectoryObject* value);
bobbuilderfilesystemFileObject* bob_builder_build_plugin_archive_debian_archive_creator_get_debianControlFile (bobbuilderbuildpluginarchiveDebianArchiveCreator* self);
void bob_builder_build_plugin_archive_debian_archive_creator_set_debianControlFile (bobbuilderbuildpluginarchiveDebianArchiveCreator* self, bobbuilderfilesystemFileObject* value);
gpointer bob_builder_build_plugin_archive_archive_creator_ref (gpointer instance);
void bob_builder_build_plugin_archive_archive_creator_unref (gpointer instance);
GParamSpec* bob_builder_build_plugin_archive_param_spec_archive_creator (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void bob_builder_build_plugin_archive_value_set_archive_creator (GValue* value, gpointer v_object);
void bob_builder_build_plugin_archive_value_take_archive_creator (GValue* value, gpointer v_object);
gpointer bob_builder_build_plugin_archive_value_get_archive_creator (const GValue* value);
GType bob_builder_build_plugin_archive_archive_creator_get_type (void) G_GNUC_CONST;
bobbuilderbuildpluginarchiveArchiveCreator* bob_builder_build_plugin_archive_archive_creator_new_tarFormat (void);
bobbuilderbuildpluginarchiveArchiveCreator* bob_builder_build_plugin_archive_archive_creator_construct_tarFormat (GType object_type);
bobbuilderbuildpluginarchiveArchiveCreator* bob_builder_build_plugin_archive_archive_creator_new_arFormat (void);
bobbuilderbuildpluginarchiveArchiveCreator* bob_builder_build_plugin_archive_archive_creator_construct_arFormat (GType object_type);
bobbuilderbuildpluginarchiveArchiveCreator* bob_builder_build_plugin_archive_archive_creator_new (int format);
bobbuilderbuildpluginarchiveArchiveCreator* bob_builder_build_plugin_archive_archive_creator_construct (GType object_type, int format);
void bob_builder_build_plugin_archive_archive_creator_addGzipFilter (bobbuilderbuildpluginarchiveArchiveCreator* self);
bobbuilderfilesystemFileObject* bob_builder_build_plugin_archive_archive_creator_createArchive (bobbuilderbuildpluginarchiveArchiveCreator* self, const gchar* name, bobbuilderfilesystemDirectoryObject* outputDirectory, GError** error);
void bob_builder_build_plugin_archive_archive_creator_addFile (bobbuilderbuildpluginarchiveArchiveCreator* self, bobbuilderfilesystemFileObject* file);
void bob_builder_build_plugin_archive_archive_creator_addFileRelative (bobbuilderbuildpluginarchiveArchiveCreator* self, bobbuilderfilesystemFileObject* file, bobbuilderfilesystemDirectoryObject* relativeDirectory);
GType bob_builder_build_plugin_archive_archive_file_get_type (void) G_GNUC_CONST;
bobbuilderbuildpluginarchiveArchiveFile* bob_builder_build_plugin_archive_archive_file_new (bobbuilderfilesystemFileObject* fileObject, const gchar* path, gint64 size);
bobbuilderbuildpluginarchiveArchiveFile* bob_builder_build_plugin_archive_archive_file_construct (GType object_type, bobbuilderfilesystemFileObject* fileObject, const gchar* path, gint64 size);
const gchar* bob_builder_build_plugin_archive_archive_file_get_path (bobbuilderbuildpluginarchiveArchiveFile* self);
void bob_builder_build_plugin_archive_archive_file_set_path (bobbuilderbuildpluginarchiveArchiveFile* self, const gchar* value);
gint64 bob_builder_build_plugin_archive_archive_file_get_size (bobbuilderbuildpluginarchiveArchiveFile* self);
void bob_builder_build_plugin_archive_archive_file_set_size (bobbuilderbuildpluginarchiveArchiveFile* self, gint64 value);
bobbuilderfilesystemFileObject* bob_builder_build_plugin_archive_archive_file_get_fileObject (bobbuilderbuildpluginarchiveArchiveFile* self);
void bob_builder_build_plugin_archive_archive_file_set_fileObject (bobbuilderbuildpluginarchiveArchiveFile* self, bobbuilderfilesystemFileObject* value);
gpointer bob_builder_build_plugin_archive_debian_archive_builder_ref (gpointer instance);
void bob_builder_build_plugin_archive_debian_archive_builder_unref (gpointer instance);
GParamSpec* bob_builder_build_plugin_archive_param_spec_debian_archive_builder (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void bob_builder_build_plugin_archive_value_set_debian_archive_builder (GValue* value, gpointer v_object);
void bob_builder_build_plugin_archive_value_take_debian_archive_builder (GValue* value, gpointer v_object);
gpointer bob_builder_build_plugin_archive_value_get_debian_archive_builder (const GValue* value);
GType bob_builder_build_plugin_archive_debian_archive_builder_get_type (void) G_GNUC_CONST;
bobbuilderbuildpluginarchiveDebianArchiveBuilder* bob_builder_build_plugin_archive_debian_archive_builder_new (bobbuilderfilesystemDirectoryObject* relativeDirectory);
bobbuilderbuildpluginarchiveDebianArchiveBuilder* bob_builder_build_plugin_archive_debian_archive_builder_construct (GType object_type, bobbuilderfilesystemDirectoryObject* relativeDirectory);
bobbuilderbuildpluginarchiveDebianArchiveBuilder* bob_builder_build_plugin_archive_debian_archive_builder_relativeDirectory (bobbuilderfilesystemDirectoryObject* relativeDirectory);
bobbuilderbuildpluginarchiveDebianArchiveBuilder* bob_builder_build_plugin_archive_debian_archive_builder_name (bobbuilderbuildpluginarchiveDebianArchiveBuilder* self, const gchar* name);
bobbuilderbuildpluginarchiveDebianArchiveBuilder* bob_builder_build_plugin_archive_debian_archive_builder_debianLibraryDirectory (bobbuilderbuildpluginarchiveDebianArchiveBuilder* self, bobbuilderfilesystemDirectoryObject* directory);
bobbuilderbuildpluginarchiveDebianArchiveBuilder* bob_builder_build_plugin_archive_debian_archive_builder_debianBinaryDirectory (bobbuilderbuildpluginarchiveDebianArchiveBuilder* self, bobbuilderfilesystemDirectoryObject* directory);
bobbuilderbuildpluginarchiveDebianArchiveBuilder* bob_builder_build_plugin_archive_debian_archive_builder_debianIncludeDirectory (bobbuilderbuildpluginarchiveDebianArchiveBuilder* self, bobbuilderfilesystemDirectoryObject* directory);
bobbuilderbuildpluginarchiveDebianArchiveBuilder* bob_builder_build_plugin_archive_debian_archive_builder_debianVapiDirectory (bobbuilderbuildpluginarchiveDebianArchiveBuilder* self, bobbuilderfilesystemDirectoryObject* directory);
bobbuilderbuildpluginarchiveDebianArchiveBuilder* bob_builder_build_plugin_archive_debian_archive_builder_debianControlFile (bobbuilderbuildpluginarchiveDebianArchiveBuilder* self, bobbuilderfilesystemFileObject* file);
bobbuilderfilesystemFileObject* bob_builder_build_plugin_archive_debian_archive_builder_build (bobbuilderbuildpluginarchiveDebianArchiveBuilder* self);


G_END_DECLS

#endif
