/* collect-sources.vapi generated by valac 0.28.0, do not modify. */

namespace com {
	namespace futureprocessing {
		namespace bob {
			namespace build {
				namespace plugin {
					[CCode (cheader_filename = "src/library/vala/com/futureprocessing/bob/plugin/CollectSourcesPlugin.h")]
					public class CollectSourcesPlugin : com.futureprocessing.bob.build.plugin.AbstractBobBuildPlugin {
						public CollectSourcesPlugin ();
						public override void initialize (com.futureprocessing.bob.recipe.plugin.BobBuildPluginRecipe pluginRecipe) throws com.futureprocessing.bob.build.plugin.BobBuildPluginError;
						public override void run (com.futureprocessing.bob.recipe.project.BobBuildProjectRecipe projectRecipe) throws com.futureprocessing.bob.build.plugin.BobBuildPluginError;
					}
					[CCode (cheader_filename = "src/library/vala/com/futureprocessing/bob/plugin/CollectSourcesPlugin.h")]
					public class ValaFilesVisitor : com.futureprocessing.bob.filesystem.FileSystemFilteringVisitor {
						public ValaFilesVisitor (string valaFilesDirectory);
						public void collectSourceFiles () throws GLib.Error;
						public override void visitFileFiltered (GLib.File file);
						public signal void valaFileFound (GLib.File valaFile);
					}
				}
			}
			[CCode (cheader_filename = "src/library/vala/com/futureprocessing/bob/plugin/CollectSourcesPlugin.h")]
			public class FileExtensionFilter : com.futureprocessing.bob.filesystem.FileFilter, GLib.Object {
				public FileExtensionFilter (string fileExtension);
			}
		}
	}
}
[CCode (cheader_filename = "src/library/vala/com/futureprocessing/bob/plugin/plugin.h")]
public static void initializePlugin (com.futureprocessing.bob.build.plugin.BobBuildPluginLoader pluginsLoader);
[CCode (cheader_filename = "src/library/vala/com/futureprocessing/bob/plugin/plugin.h")]
public static string[] getDependencies ();
