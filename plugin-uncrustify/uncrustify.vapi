/* uncrustify.vapi generated by valac 0.28.0, do not modify. */

namespace com {
	namespace futureprocessing {
		namespace bob {
			namespace build {
				namespace plugin {
					[CCode (cheader_filename = "src/library/vala/com/futureprocessing/bob/plugin/UncrustifyRunner.h")]
					public class UncrustifyPlugin : com.futureprocessing.bob.build.plugin.AbstractBobBuildPlugin {
						public UncrustifyPlugin ();
						public override void initialize (com.futureprocessing.bob.recipe.plugin.BobBuildPluginRecipe pluginRecipe) throws com.futureprocessing.bob.build.plugin.BobBuildPluginError;
						public override void run (com.futureprocessing.bob.recipe.project.BobBuildProjectRecipe projectRecipe) throws com.futureprocessing.bob.build.plugin.BobBuildPluginError;
					}
					[CCode (cheader_filename = "src/library/vala/com/futureprocessing/bob/plugin/UncrustifyRunner.h")]
					public class UncrustifyRunner : GLib.Object {
						public UncrustifyRunner (string configurationFile, bool verbose);
						public void checkUncrustifyAvailable () throws GLib.SpawnError;
						public void run (GLib.List<string> filesToProcess, string? outputPreffix, bool replaceOriginal) throws GLib.SpawnError;
						public bool backup { get; set; }
						public signal void valaFileFound (GLib.File valaFile);
					}
				}
			}
		}
	}
}
[CCode (cheader_filename = "src/library/vala/com/futureprocessing/bob/plugin/plugin.h")]
public static void initializePlugin (com.futureprocessing.bob.build.plugin.BobBuildPluginLoader pluginsLoader);
[CCode (cheader_filename = "src/library/vala/com/futureprocessing/bob/plugin/plugin.h")]
public static string[] getDependencies ();
