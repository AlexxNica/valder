/* uncrustify.vapi generated by valac 0.28.0, do not modify. */

namespace bob {
	namespace builder {
		namespace build {
			namespace plugin {
				[CCode (cheader_filename = "src/library/vala/bob/builder/build/plugin/UncrustifyRunner.h")]
				public class UncrustifyPlugin : bob.builder.build.plugin.AbstractBobBuildPlugin {
					public UncrustifyPlugin ();
					public override void initialize (bob.builder.recipe.plugin.BobBuildPluginRecipe pluginRecipe) throws bob.builder.build.plugin.BobBuildPluginError;
					public override void run (bob.builder.recipe.project.BobBuildProjectRecipe projectRecipe, bob.builder.filesystem.DirectoryObject projectDirectory) throws bob.builder.build.plugin.BobBuildPluginError;
				}
				[CCode (cheader_filename = "src/library/vala/bob/builder/build/plugin/UncrustifyRunner.h")]
				public class UncrustifyRunner : GLib.Object {
					public UncrustifyRunner (string configurationFile, bool verbose);
					public void checkUncrustifyAvailable () throws GLib.SpawnError;
					public void run (GLib.List<string> filesToProcess, string? outputPreffix, bool replaceOriginal) throws GLib.SpawnError;
					public bool backup { get; set; }
					public signal void valaFileFound (GLib.File valaFile);
				}
			}
		}
	}
}
[CCode (cheader_filename = "src/library/vala/bob/builder/build/plugin/plugin.h")]
public static void initializePlugin (bob.builder.build.plugin.BobBuildPluginLoader pluginsLoader);
[CCode (cheader_filename = "src/library/vala/bob/builder/build/plugin/plugin.h")]
public static string[] getDependencies ();
